{"ast":null,"code":"import _slicedToArray from\"/home/paul/Repos/WedSite/wedsite/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{AddInvite}from'../../../Data/Database';import{Formik,Field,Form}from'formik';import{Button}from'../../Common/Static';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function RsvpAdd(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),nameError=_useState2[0],setNameError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),serverError=_useState4[0],setServerError=_useState4[1];return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Formik,{initialValues:{name:''},onSubmit:function onSubmit(values){AddInvite(values.name,props.auth).then(function(data){if(data.status===203){setNameError(true);}else{props.addPerson(data.data);props.toggleForm();}}).catch(function(err){console.log(err);setServerError(true);});},children:function children(_ref){var values=_ref.values;return/*#__PURE__*/_jsxs(Form,{children:[nameError?/*#__PURE__*/_jsxs(\"p\",{children:[\"\\\"\",values.name,\"\\\" already on list\"]}):null,serverError?/*#__PURE__*/_jsx(\"p\",{children:\"Server may be down!! Please try again later.\"}):null,/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"name\",className:\"name\",placeholder:\"name\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",text:\"Add\",className:\"submitButton\"}),/*#__PURE__*/_jsx(Button,{text:\"Back\",clickAction:props.toggleForm,className:\"backButton\"})]});}})});}","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdd.js"],"names":["useState","AddInvite","Formik","Field","Form","Button","RsvpAdd","props","nameError","setNameError","serverError","setServerError","name","values","auth","then","data","status","addPerson","toggleForm","catch","err","console","log"],"mappings":"mHAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,SAAT,KAA0B,wBAA1B,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,IAAxB,KAAoC,QAApC,CACA,OAASC,MAAT,KAAuB,qBAAvB,C,6IAEA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACrC,cAAkCP,QAAQ,CAAC,KAAD,CAA1C,wCAAOQ,SAAP,eAAkBC,YAAlB,eACA,eAAsCT,QAAQ,CAAC,KAAD,CAA9C,yCAAOU,WAAP,eAAoBC,cAApB,eAEA,mBACE,sCACE,KAAC,MAAD,EACE,aAAa,CAAE,CACbC,IAAI,CAAE,EADO,CADjB,CAIE,QAAQ,CAAE,kBAACC,MAAD,CAAY,CACpBZ,SAAS,CAACY,MAAM,CAACD,IAAR,CAAcL,KAAK,CAACO,IAApB,CAAT,CACGC,IADH,CACQ,SAACC,IAAD,CAAU,CACd,GAAIA,IAAI,CAACC,MAAL,GAAgB,GAApB,CAAyB,CACvBR,YAAY,CAAC,IAAD,CAAZ,CACD,CAFD,IAEO,CACLF,KAAK,CAACW,SAAN,CAAgBF,IAAI,CAACA,IAArB,EACAT,KAAK,CAACY,UAAN,GACD,CACF,CARH,EASGC,KATH,CASS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACAV,cAAc,CAAC,IAAD,CAAd,CACD,CAZH,EAaD,CAlBH,UAoBG,2BAAGE,CAAAA,MAAH,MAAGA,MAAH,oBACC,MAAC,IAAD,YACGL,SAAS,cAAG,0BAAKK,MAAM,CAACD,IAAZ,wBAAH,CAA4C,IADxD,CAEGF,WAAW,cACV,mEADU,CAER,IAJN,cAKE,KAAC,KAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAC,MAHZ,CAIE,WAAW,CAAC,MAJd,EALF,cAWE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,IAAI,CAAC,KAA3B,CAAiC,SAAS,CAAC,cAA3C,EAXF,cAYE,KAAC,MAAD,EACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAEH,KAAK,CAACY,UAFrB,CAGE,SAAS,CAAC,YAHZ,EAZF,GADD,EApBH,EADF,EADF,CA6CD","sourcesContent":["import { useState } from 'react'\nimport { AddInvite } from '../../../Data/Database'\nimport { Formik, Field, Form } from 'formik'\nimport { Button } from '../../Common/Static'\n\nexport default function RsvpAdd(props) {\n  const [nameError, setNameError] = useState(false)\n  const [serverError, setServerError] = useState(false)\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n        }}\n        onSubmit={(values) => {\n          AddInvite(values.name, props.auth)\n            .then((data) => {\n              if (data.status === 203) {\n                setNameError(true)\n              } else {\n                props.addPerson(data.data)\n                props.toggleForm()\n              }\n            })\n            .catch((err) => {\n              console.log(err)\n              setServerError(true)\n            })\n        }}\n      >\n        {({ values }) => (\n          <Form>\n            {nameError ? <p>\"{values.name}\" already on list</p> : null}\n            {serverError ? (\n              <p>Server may be down!! Please try again later.</p>\n            ) : null}\n            <Field\n              type='text'\n              name='name'\n              className='name'\n              placeholder='name'\n            />\n            <Button type='submit' text='Add' className='submitButton' />\n            <Button\n              text='Back'\n              clickAction={props.toggleForm}\n              className='backButton'\n            />\n          </Form>\n        )}\n      </Formik>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}