{"ast":null,"code":"import _slicedToArray from\"/home/paul/Repos/WedSite/wedsite/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{CheckAuth}from'../../Data/Database';import{Formik,Field,Form}from'formik';import{Button}from'../Common/Static';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function SignInForm(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),nameError=_useState2[0],setNameError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),serverError=_useState4[0],setServerError=_useState4[1];return/*#__PURE__*/_jsx(Formik,{initialValues:{name:'',password:''},onSubmit:function onSubmit(values){CheckAuth(values.name,values.password).then(function(data){if(data.status===203){setNameError(true);}else{props.setName(values.name);props.setAuth(data.headers['x-amzn-remapped-authorization']);props.setResponse(data.data.response);props.setEmail(data.data.email);}}).catch(function(){setServerError(true);});},children:function children(_ref){var values=_ref.values;return/*#__PURE__*/_jsxs(Form,{children:[nameError?/*#__PURE__*/_jsxs(\"p\",{children:[\"\\\"\",values.name,\"\\\" does not match list of invites, Please try again\"]}):null,serverError?/*#__PURE__*/_jsx(\"p\",{children:\"Server may be down!! Please try again later.\"}):null,/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"name\",className:\"name\",placeholder:\"name\"}),values.name==='admin'?/*#__PURE__*/_jsx(Field,{type:\"password\",name:\"password\",className:\"password\",placeholder:\"password\"}):null,/*#__PURE__*/_jsx(Button,{type:\"submit\",text:\"Join\",className:\"submitButton\"})]});}});}","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/SignIn/SignInForm.js"],"names":["useState","CheckAuth","Formik","Field","Form","Button","SignInForm","props","nameError","setNameError","serverError","setServerError","name","password","values","then","data","status","setName","setAuth","headers","setResponse","response","setEmail","email","catch"],"mappings":"mHAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,SAAT,KAA0B,qBAA1B,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,IAAxB,KAAoC,QAApC,CACA,OAASC,MAAT,KAAuB,kBAAvB,C,wFAEA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACxC,cAAkCP,QAAQ,CAAC,KAAD,CAA1C,wCAAOQ,SAAP,eAAkBC,YAAlB,eACA,eAAsCT,QAAQ,CAAC,KAAD,CAA9C,yCAAOU,WAAP,eAAoBC,cAApB,eAEA,mBACE,KAAC,MAAD,EACE,aAAa,CAAE,CACbC,IAAI,CAAE,EADO,CAEbC,QAAQ,CAAE,EAFG,CADjB,CAKE,QAAQ,CAAE,kBAACC,MAAD,CAAY,CACpBb,SAAS,CAACa,MAAM,CAACF,IAAR,CAAcE,MAAM,CAACD,QAArB,CAAT,CACGE,IADH,CACQ,SAACC,IAAD,CAAU,CACd,GAAIA,IAAI,CAACC,MAAL,GAAgB,GAApB,CAAyB,CACvBR,YAAY,CAAC,IAAD,CAAZ,CACD,CAFD,IAEO,CACLF,KAAK,CAACW,OAAN,CAAcJ,MAAM,CAACF,IAArB,EACAL,KAAK,CAACY,OAAN,CAAcH,IAAI,CAACI,OAAL,CAAa,+BAAb,CAAd,EACAb,KAAK,CAACc,WAAN,CAAkBL,IAAI,CAACA,IAAL,CAAUM,QAA5B,EACAf,KAAK,CAACgB,QAAN,CAAeP,IAAI,CAACA,IAAL,CAAUQ,KAAzB,EACD,CACF,CAVH,EAWGC,KAXH,CAWS,UAAM,CACXd,cAAc,CAAC,IAAD,CAAd,CACD,CAbH,EAcD,CApBH,UAsBG,2BAAGG,CAAAA,MAAH,MAAGA,MAAH,oBACC,MAAC,IAAD,YACGN,SAAS,cACR,0BACIM,MAAM,CAACF,IADX,yDADQ,CAIN,IALN,CAMGF,WAAW,cACV,mEADU,CAER,IARN,cASE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,MAAxB,CAA+B,SAAS,CAAC,MAAzC,CAAgD,WAAW,CAAC,MAA5D,EATF,CAUGI,MAAM,CAACF,IAAP,GAAgB,OAAhB,cACC,KAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,SAAS,CAAC,UAHZ,CAIE,WAAW,CAAC,UAJd,EADD,CAOG,IAjBN,cAkBE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,IAAI,CAAC,MAA3B,CAAkC,SAAS,CAAC,cAA5C,EAlBF,GADD,EAtBH,EADF,CA+CD","sourcesContent":["import { useState } from 'react'\nimport { CheckAuth } from '../../Data/Database'\nimport { Formik, Field, Form } from 'formik'\nimport { Button } from '../Common/Static'\n\nexport default function SignInForm(props) {\n  const [nameError, setNameError] = useState(false)\n  const [serverError, setServerError] = useState(false)\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        password: '',\n      }}\n      onSubmit={(values) => {\n        CheckAuth(values.name, values.password)\n          .then((data) => {\n            if (data.status === 203) {\n              setNameError(true)\n            } else {\n              props.setName(values.name)\n              props.setAuth(data.headers['x-amzn-remapped-authorization'])\n              props.setResponse(data.data.response)\n              props.setEmail(data.data.email)\n            }\n          })\n          .catch(() => {\n            setServerError(true)\n          })\n      }}\n    >\n      {({ values }) => (\n        <Form>\n          {nameError ? (\n            <p>\n              \"{values.name}\" does not match list of invites, Please try again\n            </p>\n          ) : null}\n          {serverError ? (\n            <p>Server may be down!! Please try again later.</p>\n          ) : null}\n          <Field type='text' name='name' className='name' placeholder='name' />\n          {values.name === 'admin' ? (\n            <Field\n              type='password'\n              name='password'\n              className='password'\n              placeholder='password'\n            />\n          ) : null}\n          <Button type='submit' text='Join' className='submitButton' />\n        </Form>\n      )}\n    </Formik>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}