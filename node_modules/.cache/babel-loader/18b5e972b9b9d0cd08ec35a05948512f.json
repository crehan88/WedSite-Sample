{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //import RsvpListItem from './RsvpListItem'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RsvpList(props) {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const list = props.list.forEach(person => {\n    let reg = `/*${search}*/g`;\n    let found = person.name.toLowerCase().replace(/\\s/g, '').match(reg);\n    console.log(found); // if (found.length > 0) {\n    //   return <RsvpListItem\n    //     person={person}\n    //     key={person.name}\n    //     setSelected={props.setSelected}\n    //     toggleList={props.toggleList}\n    //   />\n    // }\n  });\n\n  function handleChange(event) {\n    let found = event.target.value.toLowerCase();\n    setSearch(found);\n    console.log(search);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search\",\n      type: \"text\",\n      value: search,\n      onChange: event => handleChange(event),\n      disabled: false,\n      placeholder: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"rsvpList\",\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RsvpList, \"xMSft3/sbCidYXUzqinUsZIh+qY=\");\n\n_c = RsvpList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RsvpList\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpList.js"],"names":["React","useState","RsvpList","props","search","setSearch","list","forEach","person","reg","found","name","toLowerCase","replace","match","console","log","handleChange","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMK,IAAI,GAAGH,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAoBC,MAAD,IAAY;AAC1C,QAAIC,GAAG,GAAI,KAAIL,MAAO,KAAtB;AACA,QAAIM,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYC,WAAZ,GAA0BC,OAA1B,CAAkC,KAAlC,EAAyC,EAAzC,EAA6CC,KAA7C,CAAmDL,GAAnD,CAAZ;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAH0C,CAI1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAZY,CAAb;;AAcA,WAASO,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAIR,KAAK,GAAGQ,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBR,WAAnB,EAAZ;AACAP,IAAAA,SAAS,CAACK,KAAD,CAAT;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYZ,MAAZ;AACD;;AAED,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEA,MAHT;AAIE,MAAA,QAAQ,EAAGc,KAAD,IAAWD,YAAY,CAACC,KAAD,CAJnC;AAKE,MAAA,QAAQ,EAAE,KALZ;AAME,MAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BZ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAcD;;GArCuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\n//import RsvpListItem from './RsvpListItem'\n\nexport default function RsvpList(props) {\n  const [search, setSearch] = useState('')\n\n  const list = props.list.forEach((person) => {\n    let reg = `/*${search}*/g`\n    let found = person.name.toLowerCase().replace(/\\s/g, '').match(reg)\n    console.log(found)\n    // if (found.length > 0) {\n    //   return <RsvpListItem\n    //     person={person}\n    //     key={person.name}\n    //     setSelected={props.setSelected}\n    //     toggleList={props.toggleList}\n    //   />\n    // }\n  })\n\n  function handleChange(event) {\n    let found = event.target.value.toLowerCase()\n    setSearch(found)\n    console.log(search)\n  }\n\n  return (\n    <>\n      <input\n        className='search'\n        type='text'\n        value={search}\n        onChange={(event) => handleChange(event)}\n        disabled={false}\n        placeholder='Search'\n      />\n\n      <ul className='rsvpList'>{list}</ul>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}