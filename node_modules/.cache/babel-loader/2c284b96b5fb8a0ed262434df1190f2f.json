{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport { Rsvp } from '../../../Data/Database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RSVPform(props) {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [response, setResponse] = useState(\"maybe\");\n  const [text, setText] = useState();\n  const [loading, setLoading] = useState(false);\n  const [serverError, setServerError] = useState(false);\n  const [noEmail, setNoEmail] = useState(false);\n  const [openForm, setOpenForm] = useState(true);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setLoading(true);\n    Rsvp({\n      name: props.name,\n      email: email,\n      response: response,\n      text: text\n    }, setServerError, setNoEmail);\n    if (serverError === false & noEmail === false) setOpenForm(false);\n    setLoading(false);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"TailSpin\",\n        color: \"#00BFFF\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"RSVP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), openForm ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [serverError ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server may be down!! Please try again later.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this) : null, noEmail & response === \"yes\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No email!!! Please enter a email if planning to attend.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"name\",\n          name: \"name\",\n          type: \"text\",\n          value: props.name,\n          onChange: e => props.setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"email\",\n          placeholder: \"email\",\n          name: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"question\",\n          for: \"attending\",\n          children: \"Will you be attending?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"response\",\n          className: \"response\",\n          name: \"response\",\n          value: response,\n          onChange: e => setResponse(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"maybe\",\n            children: \"Maybe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Any questions?\",\n          name: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rsvpButton\",\n          type: \"submit\",\n          value: \"submit\",\n          children: \"RSVP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formClosed\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"note\",\n          children: \"Thank you for responding.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rsvpChange\",\n          onClick: () => setOpenForm(true),\n          children: \"Change RSVP \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(RSVPform, \"CyhEZ/mu9TLn4ru4fIw6raYmcA0=\");\n\n_c = RSVPform;\n\nvar _c;\n\n$RefreshReg$(_c, \"RSVPform\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js"],"names":["React","useState","Loader","Rsvp","RSVPform","props","email","setEmail","response","setResponse","text","setText","loading","setLoading","serverError","setServerError","noEmail","setNoEmail","openForm","setOpenForm","handleSubmit","event","preventDefault","name","e","setName","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport { Rsvp } from '../../../Data/Database';\n\nexport default function RSVPform(props) {\n\n    const [email, setEmail] = useState();\n    const [response, setResponse] = useState(\"maybe\");\n    const [text, setText] = useState();\n    const [loading, setLoading] = useState(false);\n    const [serverError, setServerError] = useState(false);\n    const [noEmail, setNoEmail] = useState(false);\n    const [openForm, setOpenForm] = useState(true);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setLoading(true);\n        Rsvp({\n            name: props.name,\n            email: email,\n            response: response,\n            text: text\n        }, setServerError, setNoEmail);\n        if ((serverError === false) & (noEmail === false)) setOpenForm(false);\n        setLoading(false);\n    }\n\n    if (loading) {\n        return (\n            <div className=\"loader\">\n                <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\n            </div>\n        )\n    } else {\n        return (\n            <>\n                <h2>RSVP</h2>\n                {openForm ?\n                    <form onSubmit={handleSubmit}>\n                        {serverError ?\n                            <p>Server may be down!! Please try again later.</p>\n                            :\n                            null}\n                        {noEmail & (response === \"yes\") ?\n                            <p>No email!!! Please enter a email if planning to attend.</p>\n                            :\n                            null}\n                        <input className=\"name\"\n                            name=\"name\"\n                            type=\"text\"\n                            value={props.name}\n                            onChange={(e) => props.setName(e.target.value)}\n                        />\n                        <input className=\"email\"\n                            placeholder=\"email\"\n                            name=\"email\"\n                            type=\"email\"\n                            value={email}\n                            onChange={(e) =>\n                                setEmail(e.target.value)} />\n                        <label className=\"question\" for=\"attending\">Will you be attending?</label>\n                        <select id=\"response\"\n                            className=\"response\"\n                            name=\"response\"\n                            value={response}\n                            onChange={(e) => setResponse(e.target.value)}>\n                            <option value=\"maybe\">Maybe</option>\n                            <option value=\"yes\">Yes</option>\n                            <option value=\"no\">No</option>\n                        </select>\n                        <textarea placeholder=\"Any questions?\"\n                            name=\"text\"\n                            value={text}\n                            onChange={(e) => setText(e.target.value)} />\n                        <button className=\"rsvpButton\"\n                            type=\"submit\"\n                            value=\"submit\">RSVP</button>\n                    </form >\n                    :\n                    <div className=\"formClosed\">\n                        <p className=\"note\">Thank you for responding.</p>\n                        <button className=\"rsvpChange\"\n                            onClick={() => setOpenForm(true)}>\n                            Change RSVP </button>\n                    </div>\n                }\n            </>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}