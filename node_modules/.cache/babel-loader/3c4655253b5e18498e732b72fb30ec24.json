{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport RsvpListItem from './RsvpListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RsvpList(props) {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const list = props.list.forEach(person => {\n    let found = person.name.toLowerCase().replace(/\\s/g, '').match(search);\n\n    if (found.length > 0) {\n      return /*#__PURE__*/_jsxDEV(RsvpListItem, {\n        person: person,\n        setSelected: props.setSelected,\n        toggleList: props.toggleList\n      }, person.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 14\n      }, this);\n    }\n  });\n\n  function handleChange(event) {\n    let found = event.target.value.toLowerCase();\n    setSearch(`/${found}*/g`);\n    console.log(search);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search\",\n      type: \"text\",\n      value: search,\n      onChange: event => handleChange(event),\n      disabled: false,\n      placeholder: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"rsvpList\",\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RsvpList, \"xMSft3/sbCidYXUzqinUsZIh+qY=\");\n\n_c = RsvpList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RsvpList\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpList.js"],"names":["React","useState","RsvpListItem","RsvpList","props","search","setSearch","list","forEach","person","found","name","toLowerCase","replace","match","length","setSelected","toggleList","handleChange","event","target","value","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMM,IAAI,GAAGH,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAoBC,MAAD,IAAY;AAC1C,QAAIC,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAYC,WAAZ,GAA0BC,OAA1B,CAAkC,KAAlC,EAAyC,EAAzC,EAA6CC,KAA7C,CAAmDT,MAAnD,CAAZ;;AACA,QAAIK,KAAK,CAACK,MAAN,GAAe,CAAnB,EAAsB;AACpB,0BAAO,QAAC,YAAD;AACL,QAAA,MAAM,EAAEN,MADH;AAGL,QAAA,WAAW,EAAEL,KAAK,CAACY,WAHd;AAIL,QAAA,UAAU,EAAEZ,KAAK,CAACa;AAJb,SAEAR,MAAM,CAACE,IAFP;AAAA;AAAA;AAAA;AAAA,cAAP;AAMD;AACF,GAVY,CAAb;;AAYA,WAASO,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAIT,KAAK,GAAGS,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBT,WAAnB,EAAZ;AACAN,IAAAA,SAAS,CAAE,IAAGI,KAAM,KAAX,CAAT;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACD;;AAED,sBACE;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,QADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAEA,MAHT;AAIE,MAAA,QAAQ,EAAGc,KAAD,IAAWD,YAAY,CAACC,KAAD,CAJnC;AAKE,MAAA,QAAQ,EAAE,KALZ;AAME,MAAA,WAAW,EAAC;AANd;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA,gBAA0BZ;AAA1B;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA,kBADF;AAcD;;GAnCuBJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react'\nimport RsvpListItem from './RsvpListItem'\n\nexport default function RsvpList(props) {\n  const [search, setSearch] = useState('')\n\n  const list = props.list.forEach((person) => {\n    let found = person.name.toLowerCase().replace(/\\s/g, '').match(search)\n    if (found.length > 0) {\n      return <RsvpListItem\n        person={person}\n        key={person.name}\n        setSelected={props.setSelected}\n        toggleList={props.toggleList}\n      />\n    }\n  })\n\n  function handleChange(event) {\n    let found = event.target.value.toLowerCase()\n    setSearch(`/${found}*/g`)\n    console.log(search)\n  }\n\n  return (\n    <>\n      <input\n        className='search'\n        type='text'\n        value={search}\n        onChange={(event) => handleChange(event)}\n        disabled={false}\n        placeholder='Search'\n      />\n\n      <ul className='rsvpList'>{list}</ul>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}