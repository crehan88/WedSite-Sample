{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdd.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { AddInvite } from '../../../Data/Database';\nimport { Formik, Field, Form } from 'formik';\nimport { Button } from '../../Common/Static';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RsvpAdd() {\n  _s();\n\n  const [nameError, setNameError] = useState(false);\n  const [serverError, setServerError] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      name: ''\n    },\n    onSubmit: values => {\n      AddInvite(values.name, auth).then(data => {\n        if (data.status === 203) {\n          setNameError(true);\n        } else {\n          console.log(data);\n        }\n      }).catch(() => {\n        setServerError(true);\n      });\n    },\n    children: ({\n      values\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [nameError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\\"\", values.name, \"\\\" already on list\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this) : null, serverError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Server may be down!! Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n        type: \"text\",\n        name: \"name\",\n        className: \"name\",\n        placeholder: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        text: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RsvpAdd, \"rU/SugRFZchIYbRg9X/P/u8m08c=\");\n\n_c = RsvpAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"RsvpAdd\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdd.js"],"names":["useState","AddInvite","Formik","Field","Form","Button","RsvpAdd","nameError","setNameError","serverError","setServerError","name","values","auth","then","data","status","console","log","catch"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;AACA,SAASC,MAAT,QAAuB,qBAAvB;;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbW,MAAAA,IAAI,EAAE;AADO,KADjB;AAIE,IAAA,QAAQ,EAAGC,MAAD,IAAY;AACpBX,MAAAA,SAAS,CAACW,MAAM,CAACD,IAAR,EAAcE,IAAd,CAAT,CACGC,IADH,CACSC,IAAD,IAAU;AACd,YAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACvBR,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,SAFD,MAEO;AACLS,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;AACF,OAPH,EAQGI,KARH,CAQS,MAAM;AACXT,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OAVH;AAWD,KAhBH;AAAA,cAkBG,CAAC;AAAEE,MAAAA;AAAF,KAAD,kBACC,QAAC,IAAD;AAAA,iBACGL,SAAS,gBAAG;AAAA,yBAAKK,MAAM,CAACD,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA4C,IADxD,EAEGF,WAAW,gBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,GAER,IAJN,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,SAAS,EAAC,MAAzC;AAAgD,QAAA,WAAW,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAnCuBH,O;;KAAAA,O","sourcesContent":["import { useState } from 'react'\nimport { AddInvite } from '../../../Data/Database'\nimport { Formik, Field, Form } from 'formik'\nimport { Button } from '../../Common/Static'\n\nexport default function RsvpAdd() {\n  const [nameError, setNameError] = useState(false)\n  const [serverError, setServerError] = useState(false)\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n      }}\n      onSubmit={(values) => {\n        AddInvite(values.name, auth)\n          .then((data) => {\n            if (data.status === 203) {\n              setNameError(true)\n            } else {\n              console.log(data)\n            }\n          })\n          .catch(() => {\n            setServerError(true)\n          })\n      }}\n    >\n      {({ values }) => (\n        <Form>\n          {nameError ? <p>\"{values.name}\" already on list</p> : null}\n          {serverError ? (\n            <p>Server may be down!! Please try again later.</p>\n          ) : null}\n          <Field type='text' name='name' className='name' placeholder='name' />\n          <Button type='submit' text='Join' />\n        </Form>\n      )}\n    </Formik>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}