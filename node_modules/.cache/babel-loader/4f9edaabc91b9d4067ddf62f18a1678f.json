{"ast":null,"code":"import _slicedToArray from\"/home/paul/Repos/WedSite/wedsite/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Rsvp,GetRsvp}from'../../../Data/Database';import{Formik,Field,Form}from'formik';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function RSVPform(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),serverError=_useState4[0],setServerError=_useState4[1];useEffect(function(){GetRsvp(props.auth).then(function(data){setEmail(data.data);}).catch(function(err){console.log(\"Error :\",err);setServerError(true);});},[props.auth]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"RSVP\"}),/*#__PURE__*/_jsx(Formik,{enableReinitialize:true,initialValues:{email:email,response:props.response,text:''},validate:function validate(values){var errors={};if(!values.email&&values.response===\"yes\"){errors.email='Email Required';}else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)&&values.response===\"yes\"){errors.email='Invalid email address';}return errors;},onSubmit:function onSubmit(values){Rsvp({email:values.email,response:values.response,text:values.text},props.auth).then(function(){props.setResponse(values.response);props.setOpenRsvpForm(false);}).catch(function(err){console.log(err);setServerError(true);});},children:function children(_ref){var errors=_ref.errors,isSubmitting=_ref.isSubmitting;return/*#__PURE__*/_jsxs(Form,{children:[serverError?/*#__PURE__*/_jsx(\"p\",{children:\"Server may be down!! Please try again later.\"}):null,errors.email?/*#__PURE__*/_jsx(\"p\",{children:errors.email}):null,/*#__PURE__*/_jsx(Field,{type:\"email\",name:\"email\",className:\"email\",placeholder:\"email\"}),/*#__PURE__*/_jsx(\"label\",{className:\"question\",children:\"Will you be attending?\"}),/*#__PURE__*/_jsxs(Field,{className:\"response\",as:\"select\",name:\"response\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"maybe\",children:\"Maybe\"}),/*#__PURE__*/_jsx(\"option\",{value:\"yes\",children:\"Yes\"}),/*#__PURE__*/_jsx(\"option\",{value:\"no\",children:\"No\"})]}),/*#__PURE__*/_jsx(Field,{as:\"textarea\",name:\"text\",placeholder:\"Any Questions?\"}),/*#__PURE__*/_jsx(\"button\",{className:\"rsvpButton\",type:\"submit\",disabled:isSubmitting,children:\"RSVP\"})]});}})]});}","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js"],"names":["React","useState","useEffect","Rsvp","GetRsvp","Formik","Field","Form","RSVPform","props","email","setEmail","serverError","setServerError","auth","then","data","catch","err","console","log","response","text","values","errors","test","setResponse","setOpenRsvpForm","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Rsvp, GetRsvp } from '../../../Data/Database';\nimport { Formik, Field, Form } from 'formik';\n\nexport default function RSVPform(props) {\n\n    const [email, setEmail] = useState('');\n    const [serverError, setServerError] = useState(false);\n\n    useEffect(() => {\n        GetRsvp(props.auth)\n            .then(data => {\n                setEmail(data.data);\n            })\n            .catch((err) => {\n                console.log(\"Error :\", err);\n                setServerError(true);\n            });\n    }, [props.auth]);\n\n    return (\n        <>\n            <h2>RSVP</h2>\n            <Formik\n                enableReinitialize={true}\n                initialValues={{\n                    email: email,\n                    response: props.response,\n                    text: ''\n                }}\n                validate={values => {\n                    const errors = {};\n                    if (!values.email && (values.response === \"yes\")) {\n                        errors.email = 'Email Required';\n                    } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email) &&\n                        (values.response === \"yes\")\n                    ) {\n                        errors.email = 'Invalid email address';\n                    }\n                    return errors;\n                }}\n                onSubmit={values => {\n                    Rsvp({\n                        email: values.email,\n                        response: values.response,\n                        text: values.text\n                    }, props.auth).then(() => {\n                        props.setResponse(values.response);\n                        props.setOpenRsvpForm(false);\n                    }).catch((err) => {\n                        console.log(err);\n                        setServerError(true);\n                    });\n                }}\n            >\n                {({ errors, isSubmitting }) => (\n                    <Form >\n                        {serverError ? <p>Server may be down!! Please try again later.</p>\n                            : null}\n                        {errors.email ?\n                            <p>{errors.email}</p> : null}\n                        <Field type=\"email\" name=\"email\"\n                            className=\"email\"\n                            placeholder=\"email\" />\n                        <label className=\"question\">\n                            Will you be attending?</label>\n                        <Field className=\"response\" as=\"select\" name=\"response\" >\n                            <option value=\"maybe\">Maybe</option>\n                            <option value=\"yes\">Yes</option>\n                            <option value=\"no\">No</option>\n                        </Field>\n                        <Field as=\"textarea\" name=\"text\"\n                            placeholder=\"Any Questions?\" />\n                        <button className=\"rsvpButton\"\n                            type=\"submit\"\n                            disabled={isSubmitting}\n                        >RSVP</button>\n                    </Form>\n                )}\n            </Formik>\n        </>);\n}\n"]},"metadata":{},"sourceType":"module"}