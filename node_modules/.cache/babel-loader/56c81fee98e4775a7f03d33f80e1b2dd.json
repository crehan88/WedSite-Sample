{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport RsvpIndividual from './RsvpIndividual';\nimport RsvpList from './RsvpList';\nimport { GetList } from '../../../Data/Database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RsvpAdmin(props) {\n  _s();\n\n  const [individual, setIndividual] = useState(false);\n  const [selected, setSelected] = useState({});\n  const [list, setList] = useState([]);\n\n  function toggleList(person) {\n    setIndividual(!individual);\n    setSelected(person);\n  }\n\n  useEffect(() => {\n    GetList(props.auth).then(data => {\n      setList(data.data);\n    }).catch(err => {\n      console.log(\"Error :\", err);\n    });\n  }, [props.auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: individual ? selected.name + \" Rsvp\" : \"Rsvp List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), individual ? /*#__PURE__*/_jsxDEV(RsvpIndividual, {\n      setSelected: toggleList,\n      selected: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(RsvpList, {\n      setSelected: toggleList,\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RsvpAdmin, \"E2d9sOgXFyIZvDdXvRtbKcaN1/g=\");\n\n_c = RsvpAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"RsvpAdmin\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js"],"names":["React","useEffect","useState","RsvpIndividual","RsvpList","GetList","RsvpAdmin","props","individual","setIndividual","selected","setSelected","list","setList","toggleList","person","auth","then","data","catch","err","console","log","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAErC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASY,UAAT,CAAoBC,MAApB,EAA4B;AACxBN,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAG,IAAAA,WAAW,CAACI,MAAD,CAAX;AACH;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,OAAO,CAACE,KAAK,CAACS,IAAP,CAAP,CACKC,IADL,CACUC,IAAI,IAAI;AACVL,MAAAA,OAAO,CAACK,IAAI,CAACA,IAAN,CAAP;AACH,KAHL,EAIKC,KAJL,CAIWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACH,KANL;AAOH,GARQ,EAQN,CAACb,KAAK,CAACS,IAAP,CARM,CAAT;AAUA,sBACI;AAAA,4BACI;AAAA,gBAAKR,UAAU,GAAGE,QAAQ,CAACa,IAAT,GAAgB,OAAnB,GAA6B;AAA5C;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQf,UAAU,gBACN,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAEM,UAA7B;AACI,MAAA,QAAQ,EAAEJ;AADd;AAAA;AAAA;AAAA;AAAA,YADM,gBAGJ,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEI,UAAvB;AACE,MAAA,IAAI,EAAEF;AADR;AAAA;AAAA;AAAA;AAAA,YANd;AAAA,kBADJ;AAYH;;GAjCuBN,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport RsvpIndividual from './RsvpIndividual';\nimport RsvpList from './RsvpList';\nimport { GetList } from '../../../Data/Database';\n\nexport default function RsvpAdmin(props) {\n\n    const [individual, setIndividual] = useState(false);\n    const [selected, setSelected] = useState({});\n    const [list, setList] = useState([]);\n\n    function toggleList(person) {\n        setIndividual(!individual);\n        setSelected(person);\n    }\n\n    useEffect(() => {\n        GetList(props.auth)\n            .then(data => {\n                setList(data.data);\n            })\n            .catch(err => {\n                console.log(\"Error :\", err);\n            })\n    }, [props.auth])\n\n    return (\n        <>\n            <h2>{individual ? selected.name + \" Rsvp\" : \"Rsvp List\"}</h2>\n            {\n                individual ?\n                    <RsvpIndividual setSelected={toggleList}\n                        selected={selected} />\n                    : <RsvpList setSelected={toggleList}\n                        list={list} />\n            }\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}