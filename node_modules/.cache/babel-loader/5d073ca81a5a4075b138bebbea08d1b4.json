{"ast":null,"code":"import _slicedToArray from\"/home/paul/Repos/WedSite/wedsite/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{CheckAuth}from'../../Data/Database';import{Formik,Field,Form}from'formik';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function SignInForm(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),nameError=_useState2[0],setNameError=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),serverError=_useState4[0],setServerError=_useState4[1];return/*#__PURE__*/_jsx(Formik,{initialValues:{name:'',password:''},onSubmit:function onSubmit(values,actions){CheckAuth(values.name,values.password).then(function(data){if(data.status===203){setNameError(true);actions.setSubmitting(false);}else{props.setAuth(data.headers.authorization);props.setResponse(data.data);actions.setSubmitting(false);}}).catch(function(){setServerError(true);actions.setSubmitting(false);});},children:function children(_ref){var values=_ref.values,isSubmitting=_ref.isSubmitting;return/*#__PURE__*/_jsxs(Form,{children:[nameError?/*#__PURE__*/_jsxs(\"p\",{children:[\"\\\"\",values.name,\"\\\" does not match list of invites, Please try again\"]}):null,serverError?/*#__PURE__*/_jsx(\"p\",{children:\"Server may be down!! Please try again later.\"}):null,/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"name\",className:\"name\",placeholder:\"name\"}),values.name==='admin'?/*#__PURE__*/_jsx(Field,{type:\"password\",name:\"password\",className:\"password\",placeholder:\"password\"}):null,/*#__PURE__*/_jsx(\"button\",{className:\"signInButton\",type:\"submit\",disabled:isSubmitting,children:\"Join\"})]});}});}","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/SignIn/SignInForm.js"],"names":["useState","CheckAuth","Formik","Field","Form","SignInForm","props","nameError","setNameError","serverError","setServerError","name","password","values","actions","then","data","status","setSubmitting","setAuth","headers","authorization","setResponse","catch","isSubmitting"],"mappings":"mHAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,SAAT,KAA0B,qBAA1B,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAwBC,IAAxB,KAAoC,QAApC,C,wFAEA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CAExC,cAAkCN,QAAQ,CAAC,KAAD,CAA1C,wCAAOO,SAAP,eAAkBC,YAAlB,eACA,eAAsCR,QAAQ,CAAC,KAAD,CAA9C,yCAAOS,WAAP,eAAoBC,cAApB,eAEA,mBACE,KAAC,MAAD,EACE,aAAa,CAAE,CACbC,IAAI,CAAE,EADO,CAEbC,QAAQ,CAAE,EAFG,CADjB,CAKE,QAAQ,CAAE,kBAACC,MAAD,CAASC,OAAT,CAAqB,CAC7Bb,SAAS,CAACY,MAAM,CAACF,IAAR,CAAcE,MAAM,CAACD,QAArB,CAAT,CACGG,IADH,CACQ,SAACC,IAAD,CAAU,CACd,GAAIA,IAAI,CAACC,MAAL,GAAgB,GAApB,CAAyB,CACvBT,YAAY,CAAC,IAAD,CAAZ,CACAM,OAAO,CAACI,aAAR,CAAsB,KAAtB,EACD,CAHD,IAGO,CACLZ,KAAK,CAACa,OAAN,CAAcH,IAAI,CAACI,OAAL,CAAaC,aAA3B,EACAf,KAAK,CAACgB,WAAN,CAAkBN,IAAI,CAACA,IAAvB,EACAF,OAAO,CAACI,aAAR,CAAsB,KAAtB,EACD,CACF,CAVH,EAUKK,KAVL,CAUW,UAAM,CACbb,cAAc,CAAC,IAAD,CAAd,CACAI,OAAO,CAACI,aAAR,CAAsB,KAAtB,EACD,CAbH,EAcD,CApBH,UAsBG,2BAAGL,CAAAA,MAAH,MAAGA,MAAH,CAAWW,YAAX,MAAWA,YAAX,oBACC,MAAC,IAAD,YACGjB,SAAS,cAAG,0BACTM,MAAM,CAACF,IADE,yDAAH,CAEN,IAHN,CAIGF,WAAW,cAAG,mEAAH,CAER,IANN,cAOE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,MAAxB,CACE,SAAS,CAAC,MADZ,CACmB,WAAW,CAAC,MAD/B,EAPF,CAUGI,MAAM,CAACF,IAAP,GAAgB,OAAhB,cACC,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,IAAI,CAAC,UAA5B,CACE,SAAS,CAAC,UADZ,CACuB,WAAW,CAAC,UADnC,EADD,CAGG,IAbN,cAcE,eAAQ,SAAS,CAAC,cAAlB,CACE,IAAI,CAAC,QADP,CAEE,QAAQ,CAAEa,YAFZ,kBAdF,GADD,EAtBH,EADF,CA6CD","sourcesContent":["import { useState } from 'react';\nimport { CheckAuth } from '../../Data/Database';\nimport { Formik, Field, Form } from 'formik';\n\nexport default function SignInForm(props) {\n\n  const [nameError, setNameError] = useState(false);\n  const [serverError, setServerError] = useState(false);\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        password: ''\n      }}\n      onSubmit={(values, actions) => {\n        CheckAuth(values.name, values.password)\n          .then((data) => {\n            if (data.status === 203) {\n              setNameError(true);\n              actions.setSubmitting(false);\n            } else {\n              props.setAuth(data.headers.authorization);\n              props.setResponse(data.data);\n              actions.setSubmitting(false);\n            }\n          }).catch(() => {\n            setServerError(true);\n            actions.setSubmitting(false);\n          })\n      }}\n    >\n      {({ values, isSubmitting }) => (\n        <Form>\n          {nameError ? <p>\n            \"{values.name}\" does not match list of invites, Please try again</p>\n            : null}\n          {serverError ? <p>\n            Server may be down!! Please try again later.</p>\n            : null}\n          <Field type=\"text\" name=\"name\"\n            className=\"name\" placeholder=\"name\"\n          />\n          {values.name === 'admin' ?\n            <Field type=\"password\" name=\"password\"\n              className=\"password\" placeholder=\"password\" />\n            : null}\n          <button className=\"signInButton\"\n            type=\"submit\"\n            disabled={isSubmitting}>Join</button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}