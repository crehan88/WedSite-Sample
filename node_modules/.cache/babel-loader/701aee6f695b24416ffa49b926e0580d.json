{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Rsvp, GetRsvp } from '../../../Data/Database';\nimport { Formik, Field, Form } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RSVPform(props) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [formResponse, setFormResponse] = useState('maybe');\n  const [serverError, setServerError] = useState(false);\n  useEffect(() => {\n    GetRsvp(props.auth).then(data => {\n      setEmail(data.data.email);\n      setFormResponse(data.data.response);\n    }).catch(err => {\n      console.log(\"Error :\", err);\n      setServerError(true);\n    });\n  }, [props.auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"RSVP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      enableReinitialize: true,\n      initialValues: {\n        email: email,\n        response: formResponse,\n        text: ''\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email && values.response === \"yes\") {\n          errors.email = 'Email Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email) && values.response === \"yes\") {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: values => {\n        Rsvp({\n          email: values.email,\n          response: values.response,\n          text: values.text\n        }, props.auth).then(() => {\n          props.setOpenRsvpForm(false);\n        }).catch(() => {\n          setServerError(true);\n        });\n      },\n      children: ({\n        errors,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [serverError ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Server may be down!! Please try again later.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 40\n        }, this) : null, errors.email ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\",\n          className: \"email\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"question\",\n          children: \"Will you be attending?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          className: \"response\",\n          as: \"select\",\n          name: \"response\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"maybe\",\n            children: \"Maybe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: \"textarea\",\n          name: \"text\",\n          placeholder: \"Any Questions?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rsvpButton\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"RSVP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RSVPform, \"XVpKTe+a5IR6/nborQjdtUPm3es=\");\n\n_c = RSVPform;\n\nvar _c;\n\n$RefreshReg$(_c, \"RSVPform\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js"],"names":["React","useState","useEffect","Rsvp","GetRsvp","Formik","Field","Form","RSVPform","props","email","setEmail","formResponse","setFormResponse","serverError","setServerError","auth","then","data","response","catch","err","console","log","text","values","errors","test","setOpenRsvpForm","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Rsvp, GetRsvp } from '../../../Data/Database';\nimport { Formik, Field, Form } from 'formik';\n\nexport default function RSVPform(props) {\n\n    const [email, setEmail] = useState('');\n    const [formResponse, setFormResponse] = useState('maybe');\n    const [serverError, setServerError] = useState(false);\n\n    useEffect(() => {\n        GetRsvp(props.auth)\n            .then(data => {\n                setEmail(data.data.email);\n                setFormResponse(data.data.response);\n            })\n            .catch((err) => {\n                console.log(\"Error :\", err);\n                setServerError(true);\n            });\n    }, [props.auth]);\n\n    return (\n        <>\n            <h2>RSVP</h2>\n            <Formik\n                enableReinitialize={true}\n                initialValues={{\n                    email: email,\n                    response: formResponse,\n                    text: ''\n                }}\n                validate={values => {\n                    const errors = {};\n                    if (!values.email && (values.response === \"yes\")) {\n                        errors.email = 'Email Required';\n                    } else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email) &&\n                        (values.response === \"yes\")\n                    ) {\n                        errors.email = 'Invalid email address';\n                    }\n                    return errors;\n                }}\n                onSubmit={values => {\n                    Rsvp({\n                        email: values.email,\n                        response: values.response,\n                        text: values.text\n                    }, props.auth).then(() => {\n                        props.setOpenRsvpForm(false);\n                    }).catch(() => {\n                        setServerError(true);\n                    });\n                }}\n            >\n                {({ errors, isSubmitting }) => (\n                    <Form >\n                        {serverError ? <p>Server may be down!! Please try again later.</p>\n                            : null}\n                        {errors.email ?\n                            <p>{errors.email}</p> : null}\n                        <Field type=\"email\" name=\"email\"\n                            className=\"email\"\n                            placeholder=\"email\" />\n                        <label className=\"question\">\n                            Will you be attending?</label>\n                        <Field className=\"response\" as=\"select\" name=\"response\" >\n                            <option value=\"maybe\">Maybe</option>\n                            <option value=\"yes\">Yes</option>\n                            <option value=\"no\">No</option>\n                        </Field>\n                        <Field as=\"textarea\" name=\"text\"\n                            placeholder=\"Any Questions?\" />\n                        <button className=\"rsvpButton\"\n                            type=\"submit\"\n                            disabled={isSubmitting}\n                        >RSVP</button>\n                    </Form>\n                )}\n            </Formik>\n        </>);\n}\n"]},"metadata":{},"sourceType":"module"}