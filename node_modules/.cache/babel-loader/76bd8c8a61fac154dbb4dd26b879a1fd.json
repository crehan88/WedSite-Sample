{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport RsvpIndividual from './RsvpIndividual';\nimport RsvpList from './RsvpList';\nimport RsvpAdd from './RsvpAdd';\nimport { GetList, RemovePerson, EditInvite } from '../../../Data/Database';\nimport { Button } from '../../Common/Static';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RsvpAdmin(props) {\n  _s();\n\n  const [individual, setIndividual] = useState(false);\n  const [selected, setSelected] = useState({});\n  const [list, setList] = useState([]);\n  const [openForm, setOpenForm] = useState(false);\n  const [removeError, setRemoveError] = useState('');\n  const [removed, setRemoved] = useState('');\n  const [serverError, setServerError] = useState(false);\n\n  function toggleList() {\n    setIndividual(!individual);\n  }\n\n  function toggleForm() {\n    setOpenForm(!openForm);\n  }\n\n  function removePerson(person) {\n    RemovePerson(person, props.auth).then(data => {\n      if (data.statusCode === 203) {\n        setRemoveError(person.name);\n      } else {\n        setIndividual(false);\n        setRemoved(data.data);\n        let newList = list.filter(listPerson => listPerson.name !== data.data);\n        setList(newList);\n      }\n    }).catch(() => {\n      setServerError(true);\n    });\n  }\n\n  function addPerson(person) {\n    list.push(person);\n    setList(list);\n  }\n\n  function editPerson(oldName, newName) {\n    EditInvite(newName, oldName, props.auth).then(() => {\n      list.map(invite => {\n        if (invite.name === oldName) {\n          invite.name = newName;\n          return invite;\n        }\n\n        return invite;\n      });\n      setIndividual(false);\n    }).catch(() => {\n      setServerError(true);\n    });\n  }\n\n  useEffect(() => {\n    GetList(props.auth).then(data => {\n      setList(JSON.parse(data.data));\n    }).catch(err => {\n      console.log('Error :', err);\n    });\n  }, [props.auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: openForm ? 'Add Rsvp' : individual ? 'Rsvp' : 'Rsvp List'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rsvpadmin\",\n      children: [removeError !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [removeError, \" does not exist\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 31\n      }, this) : null, serverError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There is a server error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 24\n      }, this) : null, openForm ? /*#__PURE__*/_jsxDEV(RsvpAdd, {\n        auth: props.auth,\n        toggleForm: toggleForm,\n        addPerson: addPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : individual ? /*#__PURE__*/_jsxDEV(RsvpIndividual, {\n        auth: props.auth,\n        toggleList: toggleList,\n        selected: selected,\n        removePerson: removePerson,\n        editPerson: editPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(RsvpList, {\n        setSelected: setSelected,\n        list: list,\n        toggleList: toggleList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), openForm || individual ? null : /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Add Invite\",\n        clickAction: toggleForm,\n        className: \"addInviteButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RsvpAdmin, \"Kw0sfk7kCWMJRnRo3CjSWAdtx+M=\");\n\n_c = RsvpAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"RsvpAdmin\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js"],"names":["React","useEffect","useState","RsvpIndividual","RsvpList","RsvpAdd","GetList","RemovePerson","EditInvite","Button","RsvpAdmin","props","individual","setIndividual","selected","setSelected","list","setList","openForm","setOpenForm","removeError","setRemoveError","removed","setRemoved","serverError","setServerError","toggleList","toggleForm","removePerson","person","auth","then","data","statusCode","name","newList","filter","listPerson","catch","addPerson","push","editPerson","oldName","newName","map","invite","JSON","parse","err","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport RsvpIndividual from './RsvpIndividual'\nimport RsvpList from './RsvpList'\nimport RsvpAdd from './RsvpAdd'\nimport { GetList, RemovePerson, EditInvite } from '../../../Data/Database'\nimport { Button } from '../../Common/Static'\n\nexport default function RsvpAdmin(props) {\n  const [individual, setIndividual] = useState(false)\n  const [selected, setSelected] = useState({})\n  const [list, setList] = useState([])\n  const [openForm, setOpenForm] = useState(false)\n  const [removeError, setRemoveError] = useState('')\n  const [removed, setRemoved] = useState('')\n  const [serverError, setServerError] = useState(false)\n\n  function toggleList() {\n    setIndividual(!individual)\n  }\n  function toggleForm() {\n    setOpenForm(!openForm)\n  }\n\n  function removePerson(person) {\n    RemovePerson(person, props.auth)\n      .then((data) => {\n        if (data.statusCode === 203) {\n          setRemoveError(person.name)\n        } else {\n          setIndividual(false)\n          setRemoved(data.data)\n          let newList = list.filter(\n            (listPerson) => listPerson.name !== data.data\n          )\n          setList(newList)\n        }\n      })\n      .catch(() => {\n        setServerError(true)\n      })\n  }\n  function addPerson(person) {\n    list.push(person)\n    setList(list)\n  }\n\n  function editPerson(oldName, newName) {\n    EditInvite(newName, oldName, props.auth)\n      .then(() => {\n        list.map((invite) => {\n          if (invite.name === oldName) {\n            invite.name = newName\n            return invite\n          }\n          return invite\n        })\n        setIndividual(false)\n      })\n      .catch(() => {\n        setServerError(true)\n      })\n  }\n\n  useEffect(() => {\n    GetList(props.auth)\n      .then((data) => {\n        setList(JSON.parse(data.data))\n      })\n      .catch((err) => {\n        console.log('Error :', err)\n      })\n  }, [props.auth])\n\n  return (\n    <>\n      <h2>{openForm ? 'Add Rsvp' : individual ? 'Rsvp' : 'Rsvp List'}</h2>\n      <div className='rsvpadmin'>\n        {removeError !== '' ? <p>{removeError} does not exist</p> : null}\n        {serverError ? <p>There is a server error</p> : null}\n        {openForm ? (\n          <RsvpAdd\n            auth={props.auth}\n            toggleForm={toggleForm}\n            addPerson={addPerson}\n          />\n        ) : individual ? (\n          <RsvpIndividual\n            auth={props.auth}\n            toggleList={toggleList}\n            selected={selected}\n            removePerson={removePerson}\n            editPerson={editPerson}\n          />\n        ) : (\n          <RsvpList\n            setSelected={setSelected}\n            list={list}\n            toggleList={toggleList}\n          />\n        )}\n        {openForm || individual ? null : (\n          <Button\n            text='Add Invite'\n            clickAction={toggleForm}\n            className='addInviteButton'\n          />\n        )}\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}