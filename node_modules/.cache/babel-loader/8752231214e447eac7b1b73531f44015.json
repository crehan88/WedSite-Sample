{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Rsvp } from '../../../Data/Database';\nimport { Formik, Field, Form } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RSVPform(props) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [response, setResponse] = useState(\"maybe\");\n  const [text, setText] = useState('');\n  const [serverError, setServerError] = useState(false);\n  const [noEmail, setNoEmail] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"RSVP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      intialValues: {\n        name: props.name,\n        email: email,\n        response: response,\n        text: text\n      },\n      validate: values => {\n        const errors = {};\n\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n\n        return errors;\n      },\n      onSubmit: values => {\n        Rsvp({\n          name: values.name,\n          email: values.email,\n          response: values.response,\n          text: values.text\n        }).catch(() => {\n          setServerError(true);\n        });\n      },\n      children: ({\n        values,\n        errors,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [errors.email && values.response === \"yes\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, this) : null, /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          name: \"name\",\n          className: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\",\n          className: \"email\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"question\",\n          children: \"Will you be attending?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: \"select\",\n          name: \"response\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"maybe\",\n            children: \"Maybe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"no\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          as: \"textarea\",\n          name: \"text\",\n          placeholder: \"Any Questions?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"rsvpButton\",\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"RSVP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RSVPform, \"ReLs4YqUQtnJ0G297AVCs+2V7To=\");\n\n_c = RSVPform;\n\nvar _c;\n\n$RefreshReg$(_c, \"RSVPform\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js"],"names":["React","useState","Rsvp","Formik","Field","Form","RSVPform","props","email","setEmail","response","setResponse","text","setText","serverError","setServerError","noEmail","setNoEmail","name","values","errors","test","catch","isSubmitting"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,KAAD,CAAtC;AAEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AACI,MAAA,YAAY,EAAE;AACViB,QAAAA,IAAI,EAAEX,KAAK,CAACW,IADF;AAEVV,QAAAA,KAAK,EAAEA,KAFG;AAGVE,QAAAA,QAAQ,EAAEA,QAHA;AAIVE,QAAAA,IAAI,EAAEA;AAJI,OADlB;AAOI,MAAA,QAAQ,EAAEO,MAAM,IAAI;AAChB,cAAMC,MAAM,GAAG,EAAf;;AACA,YAAI,CAACD,MAAM,CAACX,KAAZ,EAAmB;AACfY,UAAAA,MAAM,CAACZ,KAAP,GAAe,UAAf;AACH,SAFD,MAEO,IAAI,CAAC,2CAA2Ca,IAA3C,CAAgDF,MAAM,CAACX,KAAvD,CAAL,EAAoE;AACvEY,UAAAA,MAAM,CAACZ,KAAP,GAAe,uBAAf;AACH;;AACD,eAAOY,MAAP;AACH,OAfL;AAgBI,MAAA,QAAQ,EAAED,MAAM,IAAI;AAChBjB,QAAAA,IAAI,CAAC;AACDgB,UAAAA,IAAI,EAAEC,MAAM,CAACD,IADZ;AAEDV,UAAAA,KAAK,EAAEW,MAAM,CAACX,KAFb;AAGDE,UAAAA,QAAQ,EAAES,MAAM,CAACT,QAHhB;AAIDE,UAAAA,IAAI,EAAEO,MAAM,CAACP;AAJZ,SAAD,CAAJ,CAKGU,KALH,CAKS,MAAM;AACXP,UAAAA,cAAc,CAAC,IAAD,CAAd;AACH,SAPD;AAQH,OAzBL;AAAA,gBA2BK,CAAC;AAAEI,QAAAA,MAAF;AAAUC,QAAAA,MAAV;AAAkBG,QAAAA;AAAlB,OAAD,kBACG,QAAC,IAAD;AAAA,mBACKH,MAAM,CAACZ,KAAP,IAAiBW,MAAM,CAACT,QAAP,KAAoB,KAArC,gBACG;AAAA,oBAAIU,MAAM,CAACZ;AAAX;AAAA;AAAA;AAAA;AAAA,gBADH,GAC2B,IAFhC,eAGI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AACI,UAAA,SAAS,EAAC;AADd;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAKI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,IAAI,EAAC,OAAzB;AACI,UAAA,SAAS,EAAC,OADd;AAEI,UAAA,WAAW,EAAC;AAFhB;AAAA;AAAA;AAAA;AAAA,gBALJ,eAQI;AAAO,UAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eAUI,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,QAAV;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAA,kCACI;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAeI,QAAC,KAAD;AAAO,UAAA,EAAE,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC,MAA1B;AACI,UAAA,WAAW,EAAC;AADhB;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAiBI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,QAAQ,EAAEe,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAwDH;;GAhEuBjB,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react';\nimport { Rsvp } from '../../../Data/Database';\nimport { Formik, Field, Form } from 'formik';\n\nexport default function RSVPform(props) {\n\n    const [email, setEmail] = useState('');\n    const [response, setResponse] = useState(\"maybe\");\n    const [text, setText] = useState('');\n    const [serverError, setServerError] = useState(false);\n    const [noEmail, setNoEmail] = useState(false);\n\n    return (\n        <>\n            <h2>RSVP</h2>\n            <Formik\n                intialValues={{\n                    name: props.name,\n                    email: email,\n                    response: response,\n                    text: text\n                }}\n                validate={values => {\n                    const errors = {};\n                    if (!values.email) {\n                        errors.email = 'Required';\n                    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n                        errors.email = 'Invalid email address';\n                    }\n                    return errors;\n                }}\n                onSubmit={values => {\n                    Rsvp({\n                        name: values.name,\n                        email: values.email,\n                        response: values.response,\n                        text: values.text\n                    }).catch(() => {\n                        setServerError(true);\n                    })\n                }}\n            >\n                {({ values, errors, isSubmitting }) => (\n                    <Form >\n                        {errors.email && (values.response === \"yes\") ?\n                            <p>{errors.email}</p> : null}\n                        <Field type=\"text\" name=\"name\"\n                            className=\"name\" />\n                        <Field type=\"email\" name=\"email\"\n                            className=\"email\"\n                            placeholder=\"email\" />\n                        <label className=\"question\">\n                            Will you be attending?</label>\n                        <Field as=\"select\" name=\"response\" >\n                            <option value=\"maybe\">Maybe</option>\n                            <option value=\"yes\">Yes</option>\n                            <option value=\"no\">No</option>\n                        </Field>\n                        <Field as=\"textarea\" name=\"text\"\n                            placeholder=\"Any Questions?\" />\n                        <button className=\"rsvpButton\"\n                            type=\"submit\"\n                            disabled={isSubmitting}\n                        >RSVP</button>\n                    </Form>\n                )}\n            </Formik>\n        </>);\n}\n"]},"metadata":{},"sourceType":"module"}