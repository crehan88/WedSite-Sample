{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js\";\nimport React from 'react';\nimport Loader from \"react-loader-spinner\";\nimport axios from 'axios';\nimport { API } from '../../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass RSVPform extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.name,\n      email: props.email,\n      response: props.response,\n      text: '',\n      loading: false,\n      serverError: false,\n      noEmail: false\n    };\n    this.handelSubmit = this.handelSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.checkAuth = this.checkAuth.bind(this);\n  }\n\n  checkAuth() {\n    axios({\n      method: 'POST',\n      baseURL: API + 'rsvp',\n      data: {\n        name: this.state.name,\n        email: this.state.email,\n        response: this.state.response,\n        text: this.state.text\n      }\n    }).then(() => {\n      this.setState({\n        loading: false\n      });\n      this.props.rsvp(this.state.email, this.state.name, this.state.response);\n    }).catch(err => {\n      this.setState({\n        serverError: true,\n        loading: false\n      });\n      console.log(err);\n    });\n  }\n\n  handelSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.response === \"yes\" & this.state.email === \"\") {\n      console.log(this.state.email);\n      this.setState({\n        noEmail: true\n      });\n    } else {\n      this.setState({\n        loading: true\n      });\n      this.checkAuth();\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"TailSpin\",\n          color: \"#00BFFF\",\n          height: 80,\n          width: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"RSVP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), this.props.openRsvp ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handelSubmit,\n          children: [this.state.serverError ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Server may be down!! Please try again later.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this) : null, this.state.noEmail & this.state.response === \"yes\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No email!!! Please enter a email if planning to attend.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"name\",\n            name: \"name\",\n            type: \"text\",\n            value: this.state.name,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"email\",\n            placeholder: \"email\",\n            name: \"email\",\n            type: \"email\",\n            value: this.state.email,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"question\",\n            for: \"attending\",\n            children: \"Will you be attending?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"response\",\n            className: \"response\",\n            name: \"response\",\n            value: this.state.response,\n            onChange: this.handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"maybe\",\n              children: \"Maybe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"yes\",\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"no\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Any questions?\",\n            name: \"text\",\n            value: this.state.text,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"rsvpButton\",\n            type: \"submit\",\n            value: \"submit\",\n            children: \"RSVP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formClosed\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"note\",\n            children: \"Thank you for responding.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"rsvpChange\",\n            onClick: this.props.openForm,\n            children: \"Change RSVP \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nexport default RSVPform;","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js"],"names":["React","Loader","axios","API","RSVPform","Component","constructor","props","state","name","email","response","text","loading","serverError","noEmail","handelSubmit","bind","handleChange","checkAuth","method","baseURL","data","then","setState","rsvp","catch","err","console","log","event","preventDefault","target","value","render","openRsvp","openForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Loader from \"react-loader-spinner\";\nimport axios from 'axios';\nimport { API } from '../../../constants';\n\nclass RSVPform extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: props.name,\n            email: props.email,\n            response: props.response,\n            text: '',\n            loading: false,\n            serverError: false,\n            noEmail: false\n        }\n        this.handelSubmit = this.handelSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.checkAuth = this.checkAuth.bind(this);\n    }\n\n    checkAuth() {\n        axios({\n            method: 'POST',\n            baseURL: API + 'rsvp',\n            data: {\n                name: this.state.name,\n                email: this.state.email,\n                response: this.state.response,\n                text: this.state.text\n            }\n        }).then(() => {\n            this.setState({\n                loading: false\n            })\n            this.props.rsvp(this.state.email, this.state.name, this.state.response);\n        }).catch((err) => {\n            this.setState({\n                serverError: true,\n                loading: false\n            })\n            console.log(err);\n        });\n\n    }\n\n    handelSubmit(event) {\n        event.preventDefault();\n        if ((this.state.response === \"yes\") & (this.state.email === \"\")) {\n            console.log(this.state.email);\n            this.setState({\n                noEmail: true\n            })\n        } else {\n            this.setState({\n                loading: true\n            })\n            this.checkAuth();\n        }\n    };\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n        })\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div className=\"loader\">\n                    <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\n                </div>\n            )\n        } else {\n            return (\n                <>\n                    <h2>RSVP</h2>\n                    {this.props.openRsvp ?\n                        <form onSubmit={this.handelSubmit}>\n                            {this.state.serverError ?\n                                <p>Server may be down!! Please try again later.</p>\n                                :\n                                null}\n                            {this.state.noEmail & (this.state.response === \"yes\") ?\n                                <p>No email!!! Please enter a email if planning to attend.</p>\n                                :\n                                null}\n                            <input className=\"name\"\n                                name=\"name\"\n                                type=\"text\"\n                                value={this.state.name}\n                                onChange={this.handleChange} />\n                            <input className=\"email\"\n                                placeholder=\"email\"\n                                name=\"email\"\n                                type=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleChange} />\n                            <label className=\"question\" for=\"attending\">Will you be attending?</label>\n                            <select id=\"response\" className=\"response\" name=\"response\" value={this.state.response} onChange={this.handleChange}>\n                                <option value=\"maybe\">Maybe</option>\n                                <option value=\"yes\">Yes</option>\n                                <option value=\"no\">No</option>\n                            </select>\n                            <textarea placeholder=\"Any questions?\" name=\"text\" value={this.state.text} onChange={this.handleChange} />\n                            <button className=\"rsvpButton\" type=\"submit\" value=\"submit\">RSVP</button>\n                        </form >\n                        :\n                        <div className=\"formClosed\">\n                            <p className=\"note\">Thank you for responding.</p>\n                            <button className=\"rsvpChange\"\n                                onClick={this.props.openForm}>\n                                Change RSVP </button>\n                        </div>\n                    }\n                </>\n            );\n        }\n    }\n}\n\nexport default RSVPform;\n"]},"metadata":{},"sourceType":"module"}