{"ast":null,"code":"import _slicedToArray from\"/home/paul/Repos/WedSite/wedsite/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import RsvpIndividual from'./RsvpIndividual';import RsvpList from'./RsvpList';import RsvpAdd from'./RsvpAdd';import{GetList}from'../../../Data/Database';import{Button}from'../../Common/Static';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function RsvpAdmin(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),individual=_useState2[0],setIndividual=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),selected=_useState4[0],setSelected=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),list=_useState6[0],setList=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),openForm=_useState8[0],setOpenForm=_useState8[1];function toggleList(person){setIndividual(!individual);setSelected(person);}function toggleForm(){setOpenForm(!openForm);}useEffect(function(){GetList(props.auth).then(function(data){setList(JSON.parse(data.data));}).catch(function(err){console.log('Error :',err);});},[props.auth]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:individual?selected.name+'Rsvp':openForm?'Add Invite':'Rsvp List'}),openForm?/*#__PURE__*/_jsx(RsvpAdd,{auth:props.auth,toggleForm:toggleForm}):individual?/*#__PURE__*/_jsx(RsvpIndividual,{setSelected:toggleList,selected:selected}):/*#__PURE__*/_jsx(RsvpList,{setSelected:toggleList,list:list}),/*#__PURE__*/_jsx(Button,{text:\"Add Invite\",clickAction:toggleForm})]});}","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js"],"names":["React","useEffect","useState","RsvpIndividual","RsvpList","RsvpAdd","GetList","Button","RsvpAdmin","props","individual","setIndividual","selected","setSelected","list","setList","openForm","setOpenForm","toggleList","person","toggleForm","auth","then","data","JSON","parse","catch","err","console","log","name"],"mappings":"mHAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAASC,OAAT,KAAwB,wBAAxB,CACA,OAASC,MAAT,KAAuB,qBAAvB,C,6IAEA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACvC,cAAoCP,QAAQ,CAAC,KAAD,CAA5C,wCAAOQ,UAAP,eAAmBC,aAAnB,eACA,eAAgCT,QAAQ,CAAC,EAAD,CAAxC,yCAAOU,QAAP,eAAiBC,WAAjB,eACA,eAAwBX,QAAQ,CAAC,EAAD,CAAhC,yCAAOY,IAAP,eAAaC,OAAb,eACA,eAAgCb,QAAQ,CAAC,KAAD,CAAxC,yCAAOc,QAAP,eAAiBC,WAAjB,eAEA,QAASC,CAAAA,UAAT,CAAoBC,MAApB,CAA4B,CAC1BR,aAAa,CAAC,CAACD,UAAF,CAAb,CACAG,WAAW,CAACM,MAAD,CAAX,CACD,CACD,QAASC,CAAAA,UAAT,EAAsB,CACpBH,WAAW,CAAC,CAACD,QAAF,CAAX,CACD,CAEDf,SAAS,CAAC,UAAM,CACdK,OAAO,CAACG,KAAK,CAACY,IAAP,CAAP,CACGC,IADH,CACQ,SAACC,IAAD,CAAU,CACdR,OAAO,CAACS,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACA,IAAhB,CAAD,CAAP,CACD,CAHH,EAIGG,KAJH,CAIS,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBF,GAAvB,EACD,CANH,EAOD,CARQ,CAQN,CAAClB,KAAK,CAACY,IAAP,CARM,CAAT,CAUA,mBACE,wCACE,oBACGX,UAAU,CACPE,QAAQ,CAACkB,IAAT,CAAgB,MADT,CAEPd,QAAQ,CACR,YADQ,CAER,WALN,EADF,CAQGA,QAAQ,cACP,KAAC,OAAD,EAAS,IAAI,CAAEP,KAAK,CAACY,IAArB,CAA2B,UAAU,CAAED,UAAvC,EADO,CAELV,UAAU,cACZ,KAAC,cAAD,EAAgB,WAAW,CAAEQ,UAA7B,CAAyC,QAAQ,CAAEN,QAAnD,EADY,cAGZ,KAAC,QAAD,EAAU,WAAW,CAAEM,UAAvB,CAAmC,IAAI,CAAEJ,IAAzC,EAbJ,cAeE,KAAC,MAAD,EAAQ,IAAI,CAAC,YAAb,CAA0B,WAAW,CAAEM,UAAvC,EAfF,GADF,CAmBD","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport RsvpIndividual from './RsvpIndividual'\nimport RsvpList from './RsvpList'\nimport RsvpAdd from './RsvpAdd'\nimport { GetList } from '../../../Data/Database'\nimport { Button } from '../../Common/Static'\n\nexport default function RsvpAdmin(props) {\n  const [individual, setIndividual] = useState(false)\n  const [selected, setSelected] = useState({})\n  const [list, setList] = useState([])\n  const [openForm, setOpenForm] = useState(false)\n\n  function toggleList(person) {\n    setIndividual(!individual)\n    setSelected(person)\n  }\n  function toggleForm() {\n    setOpenForm(!openForm)\n  }\n\n  useEffect(() => {\n    GetList(props.auth)\n      .then((data) => {\n        setList(JSON.parse(data.data))\n      })\n      .catch((err) => {\n        console.log('Error :', err)\n      })\n  }, [props.auth])\n\n  return (\n    <>\n      <h2>\n        {individual\n          ? selected.name + 'Rsvp'\n          : openForm\n          ? 'Add Invite'\n          : 'Rsvp List'}\n      </h2>\n      {openForm ? (\n        <RsvpAdd auth={props.auth} toggleForm={toggleForm} />\n      ) : individual ? (\n        <RsvpIndividual setSelected={toggleList} selected={selected} />\n      ) : (\n        <RsvpList setSelected={toggleList} list={list} />\n      )}\n      <Button text='Add Invite' clickAction={toggleForm} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}