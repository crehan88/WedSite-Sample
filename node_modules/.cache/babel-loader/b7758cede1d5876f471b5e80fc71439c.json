{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpIndividual.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Button } from '../../Common/Static';\nimport { RemovePerson } from '../../../Data/Database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RsvpIndividual(props) {\n  _s();\n\n  const [removeError, setRemoveError] = useState(false);\n  const [removed, setRemoved] = useState('');\n\n  function removePerson(person) {\n    RemovePerson(person).then(data => {\n      if (data.statusCode === 203) {\n        setRemoveError(person.name);\n      } else {\n        props.setIndividual(false);\n        setRemoved(person.name);\n        list.filter(listPerson => listPerson.name !== person.name);\n        setList(list);\n      }\n    }).catch(() => {\n      setServerError(true);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [removed !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [removed, \" has been removed\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this) : null, removeError !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [removeError, \" does not exist\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"individual\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.selected.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.selected.email === '' ? 'NA' : props.selected.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.selected.response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Back to List\",\n        clickAction: () => props.toggleList(),\n        className: \"backButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Remove Invite\",\n        clickAction: () => removePerson(props.selected.name),\n        className: \"removeInvite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RsvpIndividual, \"PBZDb02MzzMsSh9RP3v4pZI5It0=\");\n\n_c = RsvpIndividual;\n\nvar _c;\n\n$RefreshReg$(_c, \"RsvpIndividual\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpIndividual.js"],"names":["React","useState","Button","RemovePerson","RsvpIndividual","props","removeError","setRemoveError","removed","setRemoved","removePerson","person","then","data","statusCode","name","setIndividual","list","filter","listPerson","setList","catch","setServerError","selected","email","response","toggleList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASS,YAAT,CAAsBC,MAAtB,EAA8B;AAC5BR,IAAAA,YAAY,CAACQ,MAAD,CAAZ,CACGC,IADH,CACSC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,UAAL,KAAoB,GAAxB,EAA6B;AAC3BP,QAAAA,cAAc,CAACI,MAAM,CAACI,IAAR,CAAd;AACD,OAFD,MAEO;AACLV,QAAAA,KAAK,CAACW,aAAN,CAAoB,KAApB;AACAP,QAAAA,UAAU,CAACE,MAAM,CAACI,IAAR,CAAV;AACAE,QAAAA,IAAI,CAACC,MAAL,CAAaC,UAAD,IAAgBA,UAAU,CAACJ,IAAX,KAAoBJ,MAAM,CAACI,IAAvD;AACAK,QAAAA,OAAO,CAACH,IAAD,CAAP;AACD;AACF,KAVH,EAWGI,KAXH,CAWS,MAAM;AACXC,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAbH;AAcD;;AAED,sBACE;AAAA,eACGd,OAAO,KAAK,EAAZ,gBAAiB;AAAA,iBAAIA,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAjB,GAAqD,IADxD,EAEGF,WAAW,KAAK,EAAhB,gBAAqB;AAAA,iBAAIA,WAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,GAA2D,IAF9D,eAIE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAA,kBAAID,KAAK,CAACkB,QAAN,CAAeR;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIV,KAAK,CAACkB,QAAN,CAAeC,KAAf,KAAyB,EAAzB,GAA8B,IAA9B,GAAqCnB,KAAK,CAACkB,QAAN,CAAeC;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAInB,KAAK,CAACkB,QAAN,CAAeE;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,cADP;AAEE,QAAA,WAAW,EAAE,MAAMpB,KAAK,CAACqB,UAAN,EAFrB;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAJF,eASE,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,WAAW,EAAE,MAAMhB,YAAY,CAACL,KAAK,CAACkB,QAAN,CAAeR,IAAhB,CAFjC;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAsBD;;GA3CuBX,c;;KAAAA,c","sourcesContent":["import React from 'react'\nimport { useState } from 'react'\nimport { Button } from '../../Common/Static'\nimport { RemovePerson } from '../../../Data/Database'\n\nexport default function RsvpIndividual(props) {\n  const [removeError, setRemoveError] = useState(false)\n  const [removed, setRemoved] = useState('')\n\n  function removePerson(person) {\n    RemovePerson(person)\n      .then((data) => {\n        if (data.statusCode === 203) {\n          setRemoveError(person.name)\n        } else {\n          props.setIndividual(false)\n          setRemoved(person.name)\n          list.filter((listPerson) => listPerson.name !== person.name)\n          setList(list)\n        }\n      })\n      .catch(() => {\n        setServerError(true)\n      })\n  }\n\n  return (\n    <>\n      {removed !== '' ? <p>{removed} has been removed</p> : null}\n      {removeError !== '' ? <p>{removeError} does not exist</p> : null}\n\n      <div className='individual'>\n        <p>{props.selected.name}</p>\n        <p>{props.selected.email === '' ? 'NA' : props.selected.email}</p>\n        <p>{props.selected.response}</p>\n        <Button\n          text='Back to List'\n          clickAction={() => props.toggleList()}\n          className='backButton'\n        />\n        <Button\n          text='Remove Invite'\n          clickAction={() => removePerson(props.selected.name)}\n          className='removeInvite'\n        />\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}