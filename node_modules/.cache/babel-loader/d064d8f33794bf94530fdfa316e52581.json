{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport RsvpIndividual from './RsvpIndividual';\nimport RsvpList from './RsvpList';\nimport { GetList } from '../../../Data/Database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RsvpAdmin(props) {\n  _s();\n\n  const [individual, setIndividual] = useState(false);\n  const [selected, setSelected] = useState({});\n  const [list, setList] = useState([]);\n\n  function toggleList(person) {\n    setIndividual(!individual);\n    setSelected(person);\n  }\n\n  useEffect(() => {\n    GetList(props.auth).then(data => {\n      setList(JSON.parse(data.data));\n    }).catch(err => {\n      console.log('Error :', err);\n    });\n  }, [props.auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: individual ? selected.name + ' Rsvp' : 'Rsvp List'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), individual ? /*#__PURE__*/_jsxDEV(RsvpIndividual, {\n      setSelected: toggleList,\n      selected: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RsvpList, {\n      setSelected: toggleList,\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RsvpAdmin, \"E2d9sOgXFyIZvDdXvRtbKcaN1/g=\");\n\n_c = RsvpAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"RsvpAdmin\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js"],"names":["React","useEffect","useState","RsvpIndividual","RsvpList","GetList","RsvpAdmin","props","individual","setIndividual","selected","setSelected","list","setList","toggleList","person","auth","then","data","JSON","parse","catch","err","console","log","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASY,UAAT,CAAoBC,MAApB,EAA4B;AAC1BN,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACAG,IAAAA,WAAW,CAACI,MAAD,CAAX;AACD;;AAEDd,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACE,KAAK,CAACS,IAAP,CAAP,CACGC,IADH,CACSC,IAAD,IAAU;AACCL,MAAAA,OAAO,CAACM,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACA,IAAhB,CAAD,CAAP;AAChB,KAHH,EAIGG,KAJH,CAIUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACD,KANH;AAOD,GARQ,EAQN,CAACf,KAAK,CAACS,IAAP,CARM,CAAT;AAUA,sBACE;AAAA,4BACE;AAAA,gBAAKR,UAAU,GAAGE,QAAQ,CAACe,IAAT,GAAgB,OAAnB,GAA6B;AAA5C;AAAA;AAAA;AAAA;AAAA,YADF,EAEGjB,UAAU,gBACT,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAEM,UAA7B;AAAyC,MAAA,QAAQ,EAAEJ;AAAnD;AAAA;AAAA;AAAA;AAAA,YADS,gBAGT,QAAC,QAAD;AAAU,MAAA,WAAW,EAAEI,UAAvB;AAAmC,MAAA,IAAI,EAAEF;AAAzC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADF;AAUD;;GA9BuBN,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport RsvpIndividual from './RsvpIndividual'\nimport RsvpList from './RsvpList'\nimport { GetList } from '../../../Data/Database'\n\nexport default function RsvpAdmin(props) {\n  const [individual, setIndividual] = useState(false)\n  const [selected, setSelected] = useState({})\n  const [list, setList] = useState([])\n\n  function toggleList(person) {\n    setIndividual(!individual)\n    setSelected(person)\n  }\n\n  useEffect(() => {\n    GetList(props.auth)\n      .then((data) => {\n                       setList(JSON.parse(data.data));\n      })\n      .catch((err) => {\n        console.log('Error :', err)\n      })\n  }, [props.auth])\n\n  return (\n    <>\n      <h2>{individual ? selected.name + ' Rsvp' : 'Rsvp List'}</h2>\n      {individual ? (\n        <RsvpIndividual setSelected={toggleList} selected={selected} />\n      ) : (\n        <RsvpList setSelected={toggleList} list={list} />\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}