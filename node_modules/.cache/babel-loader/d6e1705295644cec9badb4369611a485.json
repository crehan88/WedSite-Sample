{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/SignIn/SignInForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport DataSource from '../../Data/Database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignInForm(props) {\n  _s();\n\n  const [serverError, setServerError] = useState(false);\n  const [password, setPassword] = useState();\n  const [nameError, setNameError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"TailSpin\",\n        color: \"#00BFFF\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [nameError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\\"\", props.name, \"\\\" does not match list of invites, Please try again\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 22\n      }, this) : null, serverError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Server may be down!! Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"name\",\n        placeholder: \"name\",\n        name: \"name\",\n        type: \"text\",\n        value: props.name,\n        onChange: e => props.setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), props.name === \"admin\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"password\",\n        placeholder: \"password\",\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"signInButton\",\n        type: \"submit\",\n        value: \"submit\",\n        children: \"Join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(SignInForm, \"0cqxtSrGyImgabo/TT4wxSMarxI=\");\n\n_c = SignInForm;\nexport default SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/SignIn/SignInForm.js"],"names":["useState","Loader","DataSource","SignInForm","props","serverError","setServerError","password","setPassword","nameError","setNameError","loading","setLoading","handleSubmit","e","preventDefault","name","setName","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;;AAEA,WAASa,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAGD,MAAID,OAAJ,EAAa;AACX,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,UAAb;AAAwB,QAAA,KAAK,EAAC,SAA9B;AAAwC,QAAA,MAAM,EAAE,EAAhD;AAAoD,QAAA,KAAK,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACL,wBACE;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,iBACGJ,SAAS,gBAAG;AAAA,yBACTL,KAAK,CAACY,IADG;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAEN,IAHN,EAIGX,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAER,IANN,eAOE;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,WAAW,EAAC,MAApC;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAED,KAAK,CAACY,IAHf;AAIE,QAAA,QAAQ,EAAGF,CAAD,IAAOV,KAAK,CAACa,OAAN,CAAcH,CAAC,CAACI,MAAF,CAASC,KAAvB;AAJnB;AAAA;AAAA;AAAA;AAAA,cAPF,EAYGf,KAAK,CAACY,IAAN,KAAe,OAAf,gBACC;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,WAAW,EAAC,UAAxC;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAET,QAHT;AAIE,QAAA,QAAQ,EAAGO,CAAD,IAAON,WAAW,CAACM,CAAC,CAACI,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,cADD,GAKsD,IAjBzD,eAkBE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,KAAK,EAAC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;AACF;;GA3CQhB,U;;KAAAA,U;AA4CT,eAAeA,UAAf","sourcesContent":["import { useState } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport DataSource from '../../Data/Database';\n\nfunction SignInForm(props) {\n\n  const [serverError, setServerError] = useState(false);\n  const [password, setPassword] = useState();\n  const [nameError, setNameError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setLoading(true);\n  }\n\n\n  if (loading) {\n    return (\n      <div className=\"loader\">\n        <Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} />\n      </div>\n    )\n  } else {\n    return (\n      <form onSubmit={handleSubmit}>\n        {nameError ? <p>\n          \"{props.name}\" does not match list of invites, Please try again</p>\n          : null}\n        {serverError ? <p>\n          Server may be down!! Please try again later.</p>\n          : null}\n        <input className=\"name\" placeholder=\"name\"\n          name=\"name\"\n          type=\"text\"\n          value={props.name}\n          onChange={(e) => props.setName(e.target.value)} />\n        {props.name === \"admin\" ?\n          <input className=\"password\" placeholder=\"password\"\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)} /> : null}\n        <button className=\"signInButton\" type=\"submit\" value=\"submit\">Join</button>\n      </form>\n    );\n  }\n}\nexport default SignInForm;\n"]},"metadata":{},"sourceType":"module"}