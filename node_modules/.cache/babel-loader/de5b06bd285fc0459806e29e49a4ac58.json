{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport RsvpIndividual from './RsvpIndividual';\nimport RsvpList from './RsvpList';\nimport RsvpAdd from './RsvpAdd';\nimport { GetList, RemovePerson } from '../../../Data/Database';\nimport { Button } from '../../Common/Static';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RsvpAdmin(props) {\n  _s();\n\n  const [individual, setIndividual] = useState(false);\n  const [selected, setSelected] = useState({});\n  const [list, setList] = useState([]);\n  const [openForm, setOpenForm] = useState(false);\n  const [removeError, setRemoveError] = useState(false);\n  const [removed, setRemoved] = useState('');\n  const [serverError, setServerError] = useState(false);\n  const [addedPerson, setAddedPerson] = useState('');\n  const [addedPersonError, setAddedPersonError] = useState('');\n\n  function toggleList(person) {\n    setIndividual(!individual);\n    setSelected(person);\n  }\n\n  function toggleForm() {\n    setOpenForm(!openForm);\n  }\n\n  function removePerson(person) {\n    RemovePerson(person.name).then(data => {\n      if (data.statusCode === 203) {//setRemoveError(person.name)\n      } else {// setIndividual(false)\n          // setRemoved(person.name)\n          // list.filter((listPerson) => listPerson.name !== person.name)\n          // setList(list)\n        }\n    }).catch(() => {\n      setServerError(true);\n    });\n  }\n\n  function addPerson(person, err) {\n    if (!err) {\n      list.push(person);\n      setAddedPerson(person.name);\n    }\n  }\n\n  useEffect(() => {\n    GetList(props.auth).then(data => {\n      setList(JSON.parse(data.data));\n    }).catch(err => {\n      console.log('Error :', err);\n    });\n  }, [props.auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: openForm ? 'Add Rsvp' : individual ? selected.name + 'Rsvp' : 'Rsvp List'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), removed !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [removed, \" has been removed\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }, this) : null, addedPerson !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [addedPerson, \" has been added\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }, this) : null, addedPersonError !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [addedPersonError, \" already is there\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : null, removeError !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [removeError, \" does not exist\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }, this) : null, serverError ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There is a server error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 22\n    }, this) : null, openForm ? /*#__PURE__*/_jsxDEV(RsvpAdd, {\n      auth: props.auth,\n      toggleForm: toggleForm,\n      addPerson: addPerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : individual ? /*#__PURE__*/_jsxDEV(RsvpIndividual, {\n      setSelected: toggleList,\n      selected: selected,\n      removePerson: removePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RsvpList, {\n      setSelected: setSelected,\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), openForm ? /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Back\",\n      clickAction: toggleList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Add Invite\",\n      clickAction: toggleForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RsvpAdmin, \"AUQYF4qYIFPrI8/B5Qq0fpNZwuc=\");\n\n_c = RsvpAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"RsvpAdmin\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js"],"names":["React","useEffect","useState","RsvpIndividual","RsvpList","RsvpAdd","GetList","RemovePerson","Button","RsvpAdmin","props","individual","setIndividual","selected","setSelected","list","setList","openForm","setOpenForm","removeError","setRemoveError","removed","setRemoved","serverError","setServerError","addedPerson","setAddedPerson","addedPersonError","setAddedPersonError","toggleList","person","toggleForm","removePerson","name","then","data","statusCode","catch","addPerson","err","push","auth","JSON","parse","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport RsvpIndividual from './RsvpIndividual'\nimport RsvpList from './RsvpList'\nimport RsvpAdd from './RsvpAdd'\nimport { GetList, RemovePerson } from '../../../Data/Database'\nimport { Button } from '../../Common/Static'\n\nexport default function RsvpAdmin(props) {\n  const [individual, setIndividual] = useState(false)\n  const [selected, setSelected] = useState({})\n  const [list, setList] = useState([])\n  const [openForm, setOpenForm] = useState(false)\n  const [removeError, setRemoveError] = useState(false)\n  const [removed, setRemoved] = useState('')\n  const [serverError, setServerError] = useState(false)\n  const [addedPerson, setAddedPerson] = useState('')\n  const [addedPersonError,setAddedPersonError] = useState('')\n\n  function toggleList(person) {\n    setIndividual(!individual)\n    setSelected(person)\n  }\n  function toggleForm() {\n    setOpenForm(!openForm)\n  }\n  function removePerson(person) {\n    RemovePerson(person.name)\n      .then((data) => {\n        if (data.statusCode === 203) {\n          //setRemoveError(person.name)\n        } else {\n          // setIndividual(false)\n          // setRemoved(person.name)\n          // list.filter((listPerson) => listPerson.name !== person.name)\n          // setList(list)\n        }\n      })\n      .catch(() => {\n        setServerError(true)\n      })\n  }\n  function addPerson(person,err) {\n    if(!err){\n\n    list.push(person)\n    setAddedPerson(person.name)\n    }\n  }\n\n  useEffect(() => {\n    GetList(props.auth)\n      .then((data) => {\n        setList(JSON.parse(data.data))\n      })\n      .catch((err) => {\n        console.log('Error :', err)\n      })\n  }, [props.auth])\n\n  return (\n    <>\n      <h2>\n        {openForm\n          ? 'Add Rsvp'\n          : individual\n          ? selected.name + 'Rsvp'\n          : 'Rsvp List'}\n      </h2>\n      {removed !== '' ? <p>{removed} has been removed</p> : null}\n      {addedPerson !== '' ? <p>{addedPerson} has been added</p> : null}\n      {addedPersonError !== '' ? (\n        <p>{addedPersonError} already is there</p>\n      ) : null}\n      {removeError !== '' ? <p>{removeError} does not exist</p> : null}\n      {serverError ? <p>There is a server error</p> : null}\n      {openForm ? (\n        <RsvpAdd\n          auth={props.auth}\n          toggleForm={toggleForm}\n          addPerson={addPerson}\n        />\n      ) : individual ? (\n        <RsvpIndividual\n          setSelected={toggleList}\n          selected={selected}\n          removePerson={removePerson}\n        />\n      ) : (\n        <RsvpList setSelected={setSelected} list={list} />\n      )}\n      {openForm ? (\n        <Button text='Back' clickAction={toggleList} />\n      ) : (\n        <Button text='Add Invite' clickAction={toggleForm} />\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}