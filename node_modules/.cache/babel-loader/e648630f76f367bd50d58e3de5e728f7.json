{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport RsvpIndividual from './RsvpIndividual';\nimport RsvpList from './RsvpList';\nimport RsvpAdd from './RsvpAdd';\nimport { GetList, RemovePerson } from '../../../Data/Database';\nimport { Button } from '../../Common/Static';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RsvpAdmin(props) {\n  _s();\n\n  const [individual, setIndividual] = useState(false);\n  const [selected, setSelected] = useState({});\n  const [list, setList] = useState([]);\n  const [openForm, setOpenForm] = useState(false);\n  const [removeError, setRemoveError] = useState('');\n  const [removed, setRemoved] = useState('');\n  const [serverError, setServerError] = useState(false);\n\n  function toggleList() {\n    setIndividual(!individual);\n  }\n\n  function toggleForm() {\n    setOpenForm(!openForm);\n  }\n\n  function removePerson(person) {\n    RemovePerson(person).then(data => {\n      if (data.statusCode === 203) {\n        setRemoveError(person.name);\n      } else {\n        setIndividual(false);\n        setRemoved(person.name);\n        list.filter(listPerson => listPerson.name !== person.name);\n        setList(list);\n      }\n    }).catch(() => {\n      setServerError(true);\n    });\n  }\n\n  function addPerson(person) {\n    list.push(person);\n    openForm(false);\n  }\n\n  function editPerson(oldName, newName) {\n    list.map(invite => {\n      if (invite.name === oldName) {\n        invite.name = newName;\n        return invite;\n      }\n\n      return invite;\n    });\n    openForm(false);\n  }\n\n  useEffect(() => {\n    GetList(props.auth).then(data => {\n      setList(JSON.parse(data.data));\n    }).catch(err => {\n      console.log('Error :', err);\n    });\n  }, [props.auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: openForm ? 'Add Rsvp' : individual ? selected.name + ' Rsvp' : 'Rsvp List'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rsvpadmin\",\n      children: [removed !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [removed, \" has been removed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 27\n      }, this) : null, removeError !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [removeError, \" does not exist\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }, this) : null, serverError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There is a server error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 24\n      }, this) : null, openForm ? /*#__PURE__*/_jsxDEV(RsvpAdd, {\n        auth: props.auth,\n        toggleForm: toggleForm,\n        addPerson: addPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : individual ? /*#__PURE__*/_jsxDEV(RsvpIndividual, {\n        auth: props.auth,\n        toggleList: toggleList,\n        selected: selected,\n        removePerson: removePerson,\n        editPerson: editPerson\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(RsvpList, {\n        setSelected: setSelected,\n        list: list,\n        toggleList: toggleList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), openForm || individual ? null : /*#__PURE__*/_jsxDEV(Button, {\n        text: \"Add Invite\",\n        clickAction: toggleForm,\n        className: \"addInviteButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RsvpAdmin, \"Kw0sfk7kCWMJRnRo3CjSWAdtx+M=\");\n\n_c = RsvpAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"RsvpAdmin\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js"],"names":["React","useEffect","useState","RsvpIndividual","RsvpList","RsvpAdd","GetList","RemovePerson","Button","RsvpAdmin","props","individual","setIndividual","selected","setSelected","list","setList","openForm","setOpenForm","removeError","setRemoveError","removed","setRemoved","serverError","setServerError","toggleList","toggleForm","removePerson","person","then","data","statusCode","name","filter","listPerson","catch","addPerson","push","editPerson","oldName","newName","map","invite","auth","JSON","parse","err","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport RsvpIndividual from './RsvpIndividual'\nimport RsvpList from './RsvpList'\nimport RsvpAdd from './RsvpAdd'\nimport { GetList, RemovePerson } from '../../../Data/Database'\nimport { Button } from '../../Common/Static'\n\nexport default function RsvpAdmin(props) {\n  const [individual, setIndividual] = useState(false)\n  const [selected, setSelected] = useState({})\n  const [list, setList] = useState([])\n  const [openForm, setOpenForm] = useState(false)\n  const [removeError, setRemoveError] = useState('')\n  const [removed, setRemoved] = useState('')\n  const [serverError, setServerError] = useState(false)\n\n  function toggleList() {\n    setIndividual(!individual)\n  }\n  function toggleForm() {\n    setOpenForm(!openForm)\n  }\n  function removePerson(person) {\n    RemovePerson(person)\n      .then((data) => {\n        if (data.statusCode === 203) {\n          setRemoveError(person.name)\n        } else {\n          setIndividual(false)\n          setRemoved(person.name)\n          list.filter((listPerson) => listPerson.name !== person.name)\n          setList(list)\n        }\n      })\n      .catch(() => {\n        setServerError(true)\n      })\n  }\n  function addPerson(person) {\n    list.push(person)\n    openForm(false)\n  }\n\n  function editPerson(oldName, newName) {\n    list.map((invite) => {\n      if (invite.name === oldName) {\n        invite.name = newName\n        return invite\n      }\n      return invite\n    })\n    openForm(false)\n  }\n\n  useEffect(() => {\n    GetList(props.auth)\n      .then((data) => {\n        setList(JSON.parse(data.data))\n      })\n      .catch((err) => {\n        console.log('Error :', err)\n      })\n  }, [props.auth])\n\n  return (\n    <>\n      <h2>\n        {openForm\n          ? 'Add Rsvp'\n          : individual\n          ? selected.name + ' Rsvp'\n          : 'Rsvp List'}\n      </h2>\n      <div className='rsvpadmin'>\n        {removed !== '' ? <p>{removed} has been removed</p> : null}\n        {removeError !== '' ? <p>{removeError} does not exist</p> : null}\n        {serverError ? <p>There is a server error</p> : null}\n        {openForm ? (\n          <RsvpAdd\n            auth={props.auth}\n            toggleForm={toggleForm}\n            addPerson={addPerson}\n          />\n        ) : individual ? (\n          <RsvpIndividual\n            auth={props.auth}\n            toggleList={toggleList}\n            selected={selected}\n            removePerson={removePerson}\n            editPerson={editPerson}\n          />\n        ) : (\n          <RsvpList\n            setSelected={setSelected}\n            list={list}\n            toggleList={toggleList}\n          />\n        )}\n        {openForm || individual ? null : (\n          <Button\n            text='Add Invite'\n            clickAction={toggleForm}\n            className='addInviteButton'\n          />\n        )}\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}