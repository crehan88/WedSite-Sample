{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport { Rsvp } from '../../../Data/Database';\nimport { Formik, Field, Form } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RSVPform(props) {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [response, setResponse] = useState(\"maybe\");\n  const [text, setText] = useState('');\n  const [serverError, setServerError] = useState(false);\n  const [noEmail, setNoEmail] = useState(false);\n  const [openForm, setOpenForm] = useState(true);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    Rsvp({\n      name: props.name,\n      email: email,\n      response: response,\n      text: text\n    }, setServerError, setNoEmail);\n    if (serverError === false & noEmail === false) setOpenForm(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"RSVP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), openForm ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [serverError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Server may be down!! Please try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this) : null, noEmail & response === \"yes\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No email!!! Please enter a email if planning to attend.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"name\",\n        name: \"name\",\n        type: \"text\",\n        value: props.name,\n        onChange: e => props.setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"email\",\n        placeholder: \"email\",\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"question\",\n        for: \"attending\",\n        children: \"Will you be attending?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"response\",\n        className: \"response\",\n        name: \"response\",\n        value: response,\n        onChange: e => setResponse(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"maybe\",\n          children: \"Maybe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"yes\",\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"no\",\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Any questions?\",\n        name: \"text\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rsvpButton\",\n        type: \"submit\",\n        value: \"submit\",\n        children: \"RSVP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formClosed\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"note\",\n        children: \"Thank you for responding.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"rsvpChange\",\n        onClick: () => setOpenForm(true),\n        children: \"Change RSVP \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RSVPform, \"Fs19Tqzey+Tewx86isdbb6fUnlk=\");\n\n_c = RSVPform;\n\nvar _c;\n\n$RefreshReg$(_c, \"RSVPform\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpForm.js"],"names":["React","useState","Loader","Rsvp","Formik","Field","Form","RSVPform","props","email","setEmail","response","setResponse","text","setText","serverError","setServerError","noEmail","setNoEmail","openForm","setOpenForm","handleSubmit","event","preventDefault","name","e","setName","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,QAApC;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAEpC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,IAAD,CAAxC;;AAEA,WAASoB,YAAT,CAAsBC,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACApB,IAAAA,IAAI,CAAC;AACDqB,MAAAA,IAAI,EAAEhB,KAAK,CAACgB,IADX;AAEDf,MAAAA,KAAK,EAAEA,KAFN;AAGDE,MAAAA,QAAQ,EAAEA,QAHT;AAIDE,MAAAA,IAAI,EAAEA;AAJL,KAAD,EAKDG,cALC,EAKeE,UALf,CAAJ;AAMA,QAAKH,WAAW,KAAK,KAAjB,GAA2BE,OAAO,KAAK,KAA3C,EAAmDG,WAAW,CAAC,KAAD,CAAX;AACtD;;AAED,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKD,QAAQ,gBACL;AAAM,MAAA,QAAQ,EAAEE,YAAhB;AAAA,iBACKN,WAAW,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,GAGR,IAJR,EAKKE,OAAO,GAAIN,QAAQ,KAAK,KAAxB,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAGG,IARR,eASI;AAAO,QAAA,SAAS,EAAC,MAAjB;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,KAAK,EAAEH,KAAK,CAACgB,IAHjB;AAII,QAAA,QAAQ,EAAGC,CAAD,IAAOjB,KAAK,CAACkB,OAAN,CAAcD,CAAC,CAACE,MAAF,CAASC,KAAvB;AAJrB;AAAA;AAAA;AAAA;AAAA,cATJ,eAeI;AAAO,QAAA,SAAS,EAAC,OAAjB;AACI,QAAA,WAAW,EAAC,OADhB;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,IAAI,EAAC,OAHT;AAII,QAAA,KAAK,EAAEnB,KAJX;AAKI,QAAA,QAAQ,EAAGgB,CAAD,IACNf,QAAQ,CAACe,CAAC,CAACE,MAAF,CAASC,KAAV;AANhB;AAAA;AAAA;AAAA;AAAA,cAfJ,eAsBI;AAAO,QAAA,SAAS,EAAC,UAAjB;AAA4B,QAAA,GAAG,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAuBI;AAAQ,QAAA,EAAE,EAAC,UAAX;AACI,QAAA,SAAS,EAAC,UADd;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAEjB,QAHX;AAII,QAAA,QAAQ,EAAGc,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACE,MAAF,CAASC,KAAV,CAJhC;AAAA,gCAKI;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,UAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAgCI;AAAU,QAAA,WAAW,EAAC,gBAAtB;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAEf,IAFX;AAGI,QAAA,QAAQ,EAAGY,CAAD,IAAOX,OAAO,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA,cAhCJ,eAoCI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,KAAK,EAAC,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBA0CL;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AACI,QAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,IAAD,CAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA5CR;AAAA,kBADJ;AAsDH;;GA1EuBb,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport { Rsvp } from '../../../Data/Database';\nimport { Formik, Field, Form } from 'formik';\n\nexport default function RSVPform(props) {\n\n    const [email, setEmail] = useState('');\n    const [response, setResponse] = useState(\"maybe\");\n    const [text, setText] = useState('');\n    const [serverError, setServerError] = useState(false);\n    const [noEmail, setNoEmail] = useState(false);\n    const [openForm, setOpenForm] = useState(true);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        Rsvp({\n            name: props.name,\n            email: email,\n            response: response,\n            text: text\n        }, setServerError, setNoEmail);\n        if ((serverError === false) & (noEmail === false)) setOpenForm(false);\n    }\n\n    return (\n        <>\n            <h2>RSVP</h2>\n            {openForm ?\n                <form onSubmit={handleSubmit}>\n                    {serverError ?\n                        <p>Server may be down!! Please try again later.</p>\n                        :\n                        null}\n                    {noEmail & (response === \"yes\") ?\n                        <p>No email!!! Please enter a email if planning to attend.</p>\n                        :\n                        null}\n                    <input className=\"name\"\n                        name=\"name\"\n                        type=\"text\"\n                        value={props.name}\n                        onChange={(e) => props.setName(e.target.value)}\n                    />\n                    <input className=\"email\"\n                        placeholder=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) =>\n                            setEmail(e.target.value)} />\n                    <label className=\"question\" for=\"attending\">Will you be attending?</label>\n                    <select id=\"response\"\n                        className=\"response\"\n                        name=\"response\"\n                        value={response}\n                        onChange={(e) => setResponse(e.target.value)}>\n                        <option value=\"maybe\">Maybe</option>\n                        <option value=\"yes\">Yes</option>\n                        <option value=\"no\">No</option>\n                    </select>\n                    <textarea placeholder=\"Any questions?\"\n                        name=\"text\"\n                        value={text}\n                        onChange={(e) => setText(e.target.value)} />\n                    <button className=\"rsvpButton\"\n                        type=\"submit\"\n                        value=\"submit\">RSVP</button>\n                </form >\n                :\n                <div className=\"formClosed\">\n                    <p className=\"note\">Thank you for responding.</p>\n                    <button className=\"rsvpChange\"\n                        onClick={() => setOpenForm(true)}>\n                        Change RSVP </button>\n                </div>\n            }\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}