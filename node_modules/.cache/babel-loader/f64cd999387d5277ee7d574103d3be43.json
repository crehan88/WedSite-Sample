{"ast":null,"code":"var _jsxFileName = \"/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport RsvpIndividual from './RsvpIndividual';\nimport RsvpList from './RsvpList';\nimport RsvpAdd from './RsvpAdd';\nimport { GetList, RemovePerson } from '../../../Data/Database';\nimport { Button } from '../../Common/Static';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RsvpAdmin(props) {\n  _s();\n\n  const [individual, setIndividual] = useState(false);\n  const [selected, setSelected] = useState({});\n  const [list, setList] = useState([]);\n  const [openForm, setOpenForm] = useState(false);\n  const [removeError, setRemoveError] = useState(false);\n  const [notice, setNotice] = useState('');\n  const [serverError, setServerError] = useState(false);\n\n  function toggleList(person) {\n    setIndividual(!individual);\n    setSelected(person);\n  }\n\n  function toggleForm() {\n    setOpenForm(!openForm);\n  }\n\n  function removePerson(person) {\n    RemovePerson(person.name).then(data => {\n      if (data.statusCode == 203) {\n        setRemoveError(person.name);\n      } else {\n        list.filter(listPerson => listPerson.name != person.name);\n        setList(list);\n        setIndividual(false);\n        setRemoved(person.name);\n      }\n    }).catch(() => {\n      setServerError(true);\n    });\n  }\n\n  function addPerson(person) {\n    list.push(person);\n    setAddedPerson(person.name);\n  }\n\n  useEffect(() => {\n    GetList(props.auth).then(data => {\n      setList(JSON.parse(data.data));\n    }).catch(err => {\n      console.log('Error :', err);\n    });\n  }, [props.auth]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: individual ? selected.name + 'Rsvp' : openForm ? 'Add Invite' : 'Rsvp List'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), notice != '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [notice, \" has been removed\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }, this) : null, removeError != '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [removeError, \" does not exist\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }, this) : null, serverError ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"There is a server error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }, this) : null, openForm ? /*#__PURE__*/_jsxDEV(RsvpAdd, {\n      auth: props.auth,\n      toggleForm: toggleForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : individual ? /*#__PURE__*/_jsxDEV(RsvpIndividual, {\n      setSelected: toggleList,\n      selected: selected,\n      removePerson: removePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(RsvpList, {\n      setSelected: toggleList,\n      list: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), openForm ? /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Back\",\n      clickAction: toggleForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Add Invite\",\n      clickAction: toggleForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RsvpAdmin, \"QFZ9qukpKwbmKGP673e8caWrORk=\");\n\n_c = RsvpAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"RsvpAdmin\");","map":{"version":3,"sources":["/home/paul/Repos/WedSite/wedsite/src/Layout/Main/Rsvp/RsvpAdmin.js"],"names":["React","useEffect","useState","RsvpIndividual","RsvpList","RsvpAdd","GetList","RemovePerson","Button","RsvpAdmin","props","individual","setIndividual","selected","setSelected","list","setList","openForm","setOpenForm","removeError","setRemoveError","notice","setNotice","serverError","setServerError","toggleList","person","toggleForm","removePerson","name","then","data","statusCode","filter","listPerson","setRemoved","catch","addPerson","push","setAddedPerson","auth","JSON","parse","err","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport RsvpIndividual from './RsvpIndividual'\nimport RsvpList from './RsvpList'\nimport RsvpAdd from './RsvpAdd'\nimport { GetList, RemovePerson } from '../../../Data/Database'\nimport { Button } from '../../Common/Static'\n\nexport default function RsvpAdmin(props) {\n  const [individual, setIndividual] = useState(false)\n  const [selected, setSelected] = useState({})\n  const [list, setList] = useState([])\n  const [openForm, setOpenForm] = useState(false)\n  const [removeError, setRemoveError] = useState(false)\n  const [notice, setNotice] = useState('')\n  const [serverError, setServerError] = useState(false)\n\n  function toggleList(person) {\n    setIndividual(!individual)\n    setSelected(person)\n  }\n  function toggleForm() {\n    setOpenForm(!openForm)\n  }\n  function removePerson(person) {\n    RemovePerson(person.name)\n      .then((data) => {\n        if (data.statusCode == 203) {\n          setRemoveError(person.name)\n        } else {\n          list.filter((listPerson) => listPerson.name != person.name)\n          setList(list)\n          setIndividual(false)\n          setRemoved(person.name)\n        }\n      })\n      .catch(() => {\n        setServerError(true)\n      })\n  }\n  function addPerson(person){\n      list.push(person)\n      setAddedPerson(person.name)\n  }\n\n  useEffect(() => {\n    GetList(props.auth)\n      .then((data) => {\n        setList(JSON.parse(data.data))\n      })\n      .catch((err) => {\n        console.log('Error :', err)\n      })\n  }, [props.auth])\n\n  return (\n    <>\n      <h2>\n        {individual\n          ? selected.name + 'Rsvp'\n          : openForm\n          ? 'Add Invite'\n          : 'Rsvp List'}\n      </h2>\n      {notice != '' ? <p>{notice} has been removed</p>:null}\n      {removeError != ''? <p>{removeError} does not exist</p>:null}\n      {serverError ? <p>There is a server error</p>: null}\n      {openForm ? (\n        <RsvpAdd auth={props.auth} toggleForm={toggleForm} />\n      ) : individual ? (\n        <RsvpIndividual\n          setSelected={toggleList}\n          selected={selected}\n          removePerson={removePerson}\n        />\n      ) : (\n        <RsvpList setSelected={toggleList} list={list} />\n      )}\n      {openForm ? (\n        <Button text='Back' clickAction={toggleForm} />\n      ) : (\n        <Button text='Add Invite' clickAction={toggleForm} />\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}